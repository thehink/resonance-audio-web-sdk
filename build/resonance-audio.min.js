!function(n,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t=e();for(var A in t)("object"==typeof exports?exports:n)[A]=t[A]}}("undefined"!=typeof self?self:this,function(){return function(n){var e={};function t(A){if(e[A])return e[A].exports;var i=e[A]={i:A,l:!1,exports:{}};return n[A].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=n,t.c=e,t.d=function(n,e,A){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:A})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=10)}([function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */function A(){}A.DEFAULT_SOURCE_GAIN=1,A.LISTENER_MAX_OUTSIDE_ROOM_DISTANCE=1,A.SOURCE_MAX_OUTSIDE_ROOM_DISTANCE=1,A.DEFAULT_SOURCE_DISTANCE=1,A.DEFAULT_POSITION=[0,0,0],A.DEFAULT_FORWARD=[0,0,-1],A.DEFAULT_UP=[0,1,0],A.DEFAULT_RIGHT=[1,0,0],A.DEFAULT_SPEED_OF_SOUND=343,A.ATTENUATION_ROLLOFFS=["logarithmic","linear","none"],A.DEFAULT_ATTENUATION_ROLLOFF="logarithmic",A.DEFAULT_MIN_DISTANCE=1,A.DEFAULT_MAX_DISTANCE=1e3,A.DEFAULT_DIRECTIVITY_ALPHA=0,A.DEFAULT_DIRECTIVITY_SHARPNESS=1,A.DEFAULT_AZIMUTH=0,A.DEFAULT_ELEVATION=0,A.DEFAULT_AMBISONIC_ORDER=1,A.DEFAULT_SOURCE_WIDTH=0,A.DEFAULT_REFLECTION_MAX_DURATION=.5,A.DEFAULT_REFLECTION_CUTOFF_FREQUENCY=6400,A.DEFAULT_REFLECTION_COEFFICIENTS={left:0,right:0,front:0,back:0,down:0,up:0},A.DEFAULT_REFLECTION_MIN_DISTANCE=1,A.DEFAULT_ROOM_DIMENSIONS={width:0,height:0,depth:0},A.DEFAULT_REFLECTION_MULTIPLIER=1,A.DEFAULT_REVERB_BANDWIDTH=1,A.DEFAULT_REVERB_DURATION_MULTIPLIER=1,A.DEFAULT_REVERB_PREDELAY=1.5,A.DEFAULT_REVERB_TAIL_ONSET=3.8,A.DEFAULT_REVERB_GAIN=.01,A.DEFAULT_REVERB_MAX_DURATION=3,A.DEFAULT_REVERB_FREQUENCY_BANDS=[31.25,62.5,125,250,500,1e3,2e3,4e3,8e3],A.NUMBER_REVERB_FREQUENCY_BANDS=A.DEFAULT_REVERB_FREQUENCY_BANDS.length,A.DEFAULT_REVERB_DURATIONS=new Float32Array(A.NUMBER_REVERB_FREQUENCY_BANDS),A.ROOM_MATERIAL_COEFFICIENTS={transparent:[1,1,1,1,1,1,1,1,1],"acoustic-ceiling-tiles":[.672,.675,.7,.66,.72,.92,.88,.75,1],"brick-bare":[.03,.03,.03,.03,.03,.04,.05,.07,.14],"brick-painted":[.006,.007,.01,.01,.02,.02,.02,.03,.06],"concrete-block-coarse":[.36,.36,.36,.44,.31,.29,.39,.25,.5],"concrete-block-painted":[.092,.09,.1,.05,.06,.07,.09,.08,.16],"curtain-heavy":[.073,.106,.14,.35,.55,.72,.7,.65,1],"fiber-glass-insulation":[.193,.22,.22,.82,.99,.99,.99,.99,1],"glass-thin":[.18,.169,.18,.06,.04,.03,.02,.02,.04],"glass-thick":[.35,.35,.35,.25,.18,.12,.07,.04,.08],grass:[.05,.05,.15,.25,.4,.55,.6,.6,.6],"linoleum-on-concrete":[.02,.02,.02,.03,.03,.03,.03,.02,.04],marble:[.01,.01,.01,.01,.01,.01,.02,.02,.04],metal:[.03,.035,.04,.04,.05,.05,.05,.07,.09],"parquet-on-concrete":[.028,.03,.04,.04,.07,.06,.06,.07,.14],"plaster-rough":[.017,.018,.02,.03,.04,.05,.04,.03,.06],"plaster-smooth":[.011,.012,.013,.015,.02,.03,.04,.05,.1],"plywood-panel":[.4,.34,.28,.22,.17,.09,.1,.11,.22],"polished-concrete-or-tile":[.008,.008,.01,.01,.015,.02,.02,.02,.04],"sheet-rock":[.29,.279,.29,.1,.05,.04,.07,.09,.18],"water-or-ice-surface":[.006,.006,.008,.008,.013,.015,.02,.025,.05],"wood-ceiling":[.15,.147,.15,.11,.1,.07,.06,.07,.14],"wood-panel":[.28,.28,.28,.22,.17,.09,.1,.11,.22],uniform:[.5,.5,.5,.5,.5,.5,.5,.5,.5]},A.DEFAULT_ROOM_MATERIALS={left:"transparent",right:"transparent",front:"transparent",back:"transparent",down:"transparent",up:"transparent"},A.NUMBER_REFLECTION_AVERAGING_BANDS=3,A.ROOM_STARTING_AVERAGING_BAND=4,A.ROOM_MIN_VOLUME=1e-4,A.ROOM_AIR_ABSORPTION_COEFFICIENTS=[6e-4,6e-4,7e-4,8e-4,.001,.0015,.0026,.006,.0207],A.ROOM_EYRING_CORRECTION_COEFFICIENT=1.38,A.TWO_PI=6.28318530717959,A.TWENTY_FOUR_LOG10=55.2620422318571,A.LOG1000=6.90775527898214,A.LOG2_DIV2=.346573590279973,A.DEGREES_TO_RADIANS=.017453292519943,A.RADIANS_TO_DEGREES=57.29577951308232,A.EPSILON_FLOAT=1e-8,A.log=function(){window.console.log.apply(window.console,["%c[ResonanceAudio]%c "+Array.prototype.slice.call(arguments).join(" ")+" %c(@"+performance.now().toFixed(2)+"ms)","background: #BBDEFB; color: #FF5722; font-weight: 700","font-weight: 400","color: #AAA"])},A.normalizeVector=function(n){let t=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);return t>e.EPSILON_FLOAT&&(t=1/t,n[0]*=t,n[1]*=t,n[2]*=t),n},A.crossProduct=function(n,e){return[n[1]*e[2]-n[2]*e[1],n[2]*e[0]-n[0]*e[2],n[0]*e[1]-n[1]*e[0]]},n.exports=A},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(3),i=t(0);function r(n,e){void 0==e&&(e={}),void 0==e.ambisonicOrder&&(e.ambisonicOrder=i.DEFAULT_AMBISONIC_ORDER),void 0==e.azimuth&&(e.azimuth=i.DEFAULT_AZIMUTH),void 0==e.elevation&&(e.elevation=i.DEFAULT_ELEVATION),void 0==e.sourceWidth&&(e.sourceWidth=i.DEFAULT_SOURCE_WIDTH),this._context=n,this.input=n.createGain(),this._channelGain=[],this._merger=void 0,this.output=n.createGain(),this.setAmbisonicOrder(e.ambisonicOrder),this._azimuth=e.azimuth,this._elevation=e.elevation,this.setSourceWidth(e.sourceWidth)}r.prototype.setAmbisonicOrder=function(n){this._ambisonicOrder=r.validateAmbisonicOrder(n),this.input.disconnect();for(let t=0;t<this._channelGain.length;t++)this._channelGain[t].disconnect();void 0!=this._merger&&this._merger.disconnect(),delete this._channelGain,delete this._merger;let e=(this._ambisonicOrder+1)*(this._ambisonicOrder+1);this._merger=this._context.createChannelMerger(e),this._channelGain=new Array(e);for(let t=0;t<e;t++)this._channelGain[t]=this._context.createGain(),this.input.connect(this._channelGain[t]),this._channelGain[t].connect(this._merger,0,t);this._merger.connect(this.output)},r.prototype.setDirection=function(n,e){(void 0==n||isNaN(n))&&(n=i.DEFAULT_AZIMUTH),(void 0==e||isNaN(e))&&(e=i.DEFAULT_ELEVATION),this._azimuth=n,this._elevation=e,(n=Math.round(n%360))<0&&(n+=360),e=Math.round(Math.min(90,Math.max(-90,e)))+90,this._channelGain[0].gain.value=A.MAX_RE_WEIGHTS[this._spreadIndex][0];for(let t=1;t<=this._ambisonicOrder;t++){let i=A.MAX_RE_WEIGHTS[this._spreadIndex][t];for(let r=-t;r<=t;r++){let o=t*t+t+r,s=t*(t+1)/2+Math.abs(r)-1,a=A.SPHERICAL_HARMONICS[1][e][s];if(0!=r){let e=A.SPHERICAL_HARMONICS_MAX_ORDER+r-1;r<0&&(e=A.SPHERICAL_HARMONICS_MAX_ORDER+r),a*=A.SPHERICAL_HARMONICS[0][n][e]}this._channelGain[o].gain.value=a*i}}},r.prototype.setSourceWidth=function(n){this._spreadIndex=Math.min(359,Math.max(0,Math.round(n))),this.setDirection(this._azimuth,this._elevation)},r.validateAmbisonicOrder=function(n){return isNaN(n)||void 0==n?(i.log("Error: Invalid ambisonic order",options.ambisonicOrder,"\nUsing ambisonicOrder=1 instead."),n=1):n<1?(i.log("Error: Unable to render ambisonic order",options.ambisonicOrder,"(Min order is 1)","\nUsing min order instead."),n=1):n>A.SPHERICAL_HARMONICS_MAX_ORDER&&(i.log("Error: Unable to render ambisonic order",options.ambisonicOrder,"(Max order is",A.SPHERICAL_HARMONICS_MAX_ORDER,")\nUsing max order instead."),options.ambisonicOrder=A.SPHERICAL_HARMONICS_MAX_ORDER),n},n.exports=r},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(12),i=t(1),r=t(0);function o(n,e){void 0==e&&(e={}),void 0==e.ambisonicOrder&&(e.ambisonicOrder=r.DEFAULT_AMBISONIC_ORDER),void 0==e.position&&(e.position=r.DEFAULT_POSITION.slice()),void 0==e.forward&&(e.forward=r.DEFAULT_FORWARD.slice()),void 0==e.up&&(e.up=r.DEFAULT_UP.slice()),this.position=new Float32Array(3),this._tempMatrix3=new Float32Array(9),this._ambisonicOrder=i.validateAmbisonicOrder(e.ambisonicOrder),this._context=n,1==this._ambisonicOrder?this._renderer=A.Omnitone.createFOARenderer(n,{}):this._ambisonicOrder>1&&(this._renderer=A.Omnitone.createHOARenderer(n,{ambisonicOrder:this._ambisonicOrder})),this.input=n.createGain(),this.output=n.createGain(),this.ambisonicOutput=n.createGain();let t=this;this._renderer.initialize().then(function(){t.input.connect(t._renderer.input),t._ambisonicOrder>1?t._renderer._hoaRotator.output.connect(t.ambisonicOutput):t._renderer._foaRotator.output.connect(t.ambisonicOutput),t._renderer.output.connect(t.output)}),this.setOrientation(e.forward[0],e.forward[1],e.forward[2],e.up[0],e.up[1],e.up[2])}o.prototype.setOrientation=function(n,e,t,A,i,o){let s=r.crossProduct([n,e,t],[A,i,o]);this._tempMatrix3[0]=s[0],this._tempMatrix3[1]=s[1],this._tempMatrix3[2]=s[2],this._tempMatrix3[3]=A,this._tempMatrix3[4]=i,this._tempMatrix3[5]=o,this._tempMatrix3[6]=n,this._tempMatrix3[7]=e,this._tempMatrix3[8]=t,this._renderer.setRotationMatrix3(this._tempMatrix3)},o.prototype.setFromMatrix=function(n){this._renderer.setRotationMatrix4(n.elements),this.position[0]=n.elements[12],this.position[1]=n.elements[13],this.position[2]=n.elements[14]},n.exports=o},function(n,e,t){"use strict";e.SPHERICAL_HARMONICS=[[[0,0,0,1,1,1],[.052336,.034899,.017452,.999848,.999391,.99863],[.104528,.069756,.034899,.999391,.997564,.994522],[.156434,.104528,.052336,.99863,.994522,.987688],[.207912,.139173,.069756,.997564,.990268,.978148],[.258819,.173648,.087156,.996195,.984808,.965926],[.309017,.207912,.104528,.994522,.978148,.951057],[.358368,.241922,.121869,.992546,.970296,.93358],[.406737,.275637,.139173,.990268,.961262,.913545],[.45399,.309017,.156434,.987688,.951057,.891007],[.5,.34202,.173648,.984808,.939693,.866025],[.544639,.374607,.190809,.981627,.927184,.838671],[.587785,.406737,.207912,.978148,.913545,.809017],[.62932,.438371,.224951,.97437,.898794,.777146],[.669131,.469472,.241922,.970296,.882948,.743145],[.707107,.5,.258819,.965926,.866025,.707107],[.743145,.529919,.275637,.961262,.848048,.669131],[.777146,.559193,.292372,.956305,.829038,.62932],[.809017,.587785,.309017,.951057,.809017,.587785],[.838671,.615661,.325568,.945519,.788011,.544639],[.866025,.642788,.34202,.939693,.766044,.5],[.891007,.669131,.358368,.93358,.743145,.45399],[.913545,.694658,.374607,.927184,.71934,.406737],[.93358,.71934,.390731,.920505,.694658,.358368],[.951057,.743145,.406737,.913545,.669131,.309017],[.965926,.766044,.422618,.906308,.642788,.258819],[.978148,.788011,.438371,.898794,.615661,.207912],[.987688,.809017,.45399,.891007,.587785,.156434],[.994522,.829038,.469472,.882948,.559193,.104528],[.99863,.848048,.48481,.87462,.529919,.052336],[1,.866025,.5,.866025,.5,0],[.99863,.882948,.515038,.857167,.469472,-.052336],[.994522,.898794,.529919,.848048,.438371,-.104528],[.987688,.913545,.544639,.838671,.406737,-.156434],[.978148,.927184,.559193,.829038,.374607,-.207912],[.965926,.939693,.573576,.819152,.34202,-.258819],[.951057,.951057,.587785,.809017,.309017,-.309017],[.93358,.961262,.601815,.798636,.275637,-.358368],[.913545,.970296,.615661,.788011,.241922,-.406737],[.891007,.978148,.62932,.777146,.207912,-.45399],[.866025,.984808,.642788,.766044,.173648,-.5],[.838671,.990268,.656059,.75471,.139173,-.544639],[.809017,.994522,.669131,.743145,.104528,-.587785],[.777146,.997564,.681998,.731354,.069756,-.62932],[.743145,.999391,.694658,.71934,.034899,-.669131],[.707107,1,.707107,.707107,0,-.707107],[.669131,.999391,.71934,.694658,-.034899,-.743145],[.62932,.997564,.731354,.681998,-.069756,-.777146],[.587785,.994522,.743145,.669131,-.104528,-.809017],[.544639,.990268,.75471,.656059,-.139173,-.838671],[.5,.984808,.766044,.642788,-.173648,-.866025],[.45399,.978148,.777146,.62932,-.207912,-.891007],[.406737,.970296,.788011,.615661,-.241922,-.913545],[.358368,.961262,.798636,.601815,-.275637,-.93358],[.309017,.951057,.809017,.587785,-.309017,-.951057],[.258819,.939693,.819152,.573576,-.34202,-.965926],[.207912,.927184,.829038,.559193,-.374607,-.978148],[.156434,.913545,.838671,.544639,-.406737,-.987688],[.104528,.898794,.848048,.529919,-.438371,-.994522],[.052336,.882948,.857167,.515038,-.469472,-.99863],[0,.866025,.866025,.5,-.5,-1],[-.052336,.848048,.87462,.48481,-.529919,-.99863],[-.104528,.829038,.882948,.469472,-.559193,-.994522],[-.156434,.809017,.891007,.45399,-.587785,-.987688],[-.207912,.788011,.898794,.438371,-.615661,-.978148],[-.258819,.766044,.906308,.422618,-.642788,-.965926],[-.309017,.743145,.913545,.406737,-.669131,-.951057],[-.358368,.71934,.920505,.390731,-.694658,-.93358],[-.406737,.694658,.927184,.374607,-.71934,-.913545],[-.45399,.669131,.93358,.358368,-.743145,-.891007],[-.5,.642788,.939693,.34202,-.766044,-.866025],[-.544639,.615661,.945519,.325568,-.788011,-.838671],[-.587785,.587785,.951057,.309017,-.809017,-.809017],[-.62932,.559193,.956305,.292372,-.829038,-.777146],[-.669131,.529919,.961262,.275637,-.848048,-.743145],[-.707107,.5,.965926,.258819,-.866025,-.707107],[-.743145,.469472,.970296,.241922,-.882948,-.669131],[-.777146,.438371,.97437,.224951,-.898794,-.62932],[-.809017,.406737,.978148,.207912,-.913545,-.587785],[-.838671,.374607,.981627,.190809,-.927184,-.544639],[-.866025,.34202,.984808,.173648,-.939693,-.5],[-.891007,.309017,.987688,.156434,-.951057,-.45399],[-.913545,.275637,.990268,.139173,-.961262,-.406737],[-.93358,.241922,.992546,.121869,-.970296,-.358368],[-.951057,.207912,.994522,.104528,-.978148,-.309017],[-.965926,.173648,.996195,.087156,-.984808,-.258819],[-.978148,.139173,.997564,.069756,-.990268,-.207912],[-.987688,.104528,.99863,.052336,-.994522,-.156434],[-.994522,.069756,.999391,.034899,-.997564,-.104528],[-.99863,.034899,.999848,.017452,-.999391,-.052336],[-1,0,1,0,-1,-0],[-.99863,-.034899,.999848,-.017452,-.999391,.052336],[-.994522,-.069756,.999391,-.034899,-.997564,.104528],[-.987688,-.104528,.99863,-.052336,-.994522,.156434],[-.978148,-.139173,.997564,-.069756,-.990268,.207912],[-.965926,-.173648,.996195,-.087156,-.984808,.258819],[-.951057,-.207912,.994522,-.104528,-.978148,.309017],[-.93358,-.241922,.992546,-.121869,-.970296,.358368],[-.913545,-.275637,.990268,-.139173,-.961262,.406737],[-.891007,-.309017,.987688,-.156434,-.951057,.45399],[-.866025,-.34202,.984808,-.173648,-.939693,.5],[-.838671,-.374607,.981627,-.190809,-.927184,.544639],[-.809017,-.406737,.978148,-.207912,-.913545,.587785],[-.777146,-.438371,.97437,-.224951,-.898794,.62932],[-.743145,-.469472,.970296,-.241922,-.882948,.669131],[-.707107,-.5,.965926,-.258819,-.866025,.707107],[-.669131,-.529919,.961262,-.275637,-.848048,.743145],[-.62932,-.559193,.956305,-.292372,-.829038,.777146],[-.587785,-.587785,.951057,-.309017,-.809017,.809017],[-.544639,-.615661,.945519,-.325568,-.788011,.838671],[-.5,-.642788,.939693,-.34202,-.766044,.866025],[-.45399,-.669131,.93358,-.358368,-.743145,.891007],[-.406737,-.694658,.927184,-.374607,-.71934,.913545],[-.358368,-.71934,.920505,-.390731,-.694658,.93358],[-.309017,-.743145,.913545,-.406737,-.669131,.951057],[-.258819,-.766044,.906308,-.422618,-.642788,.965926],[-.207912,-.788011,.898794,-.438371,-.615661,.978148],[-.156434,-.809017,.891007,-.45399,-.587785,.987688],[-.104528,-.829038,.882948,-.469472,-.559193,.994522],[-.052336,-.848048,.87462,-.48481,-.529919,.99863],[-0,-.866025,.866025,-.5,-.5,1],[.052336,-.882948,.857167,-.515038,-.469472,.99863],[.104528,-.898794,.848048,-.529919,-.438371,.994522],[.156434,-.913545,.838671,-.544639,-.406737,.987688],[.207912,-.927184,.829038,-.559193,-.374607,.978148],[.258819,-.939693,.819152,-.573576,-.34202,.965926],[.309017,-.951057,.809017,-.587785,-.309017,.951057],[.358368,-.961262,.798636,-.601815,-.275637,.93358],[.406737,-.970296,.788011,-.615661,-.241922,.913545],[.45399,-.978148,.777146,-.62932,-.207912,.891007],[.5,-.984808,.766044,-.642788,-.173648,.866025],[.544639,-.990268,.75471,-.656059,-.139173,.838671],[.587785,-.994522,.743145,-.669131,-.104528,.809017],[.62932,-.997564,.731354,-.681998,-.069756,.777146],[.669131,-.999391,.71934,-.694658,-.034899,.743145],[.707107,-1,.707107,-.707107,-0,.707107],[.743145,-.999391,.694658,-.71934,.034899,.669131],[.777146,-.997564,.681998,-.731354,.069756,.62932],[.809017,-.994522,.669131,-.743145,.104528,.587785],[.838671,-.990268,.656059,-.75471,.139173,.544639],[.866025,-.984808,.642788,-.766044,.173648,.5],[.891007,-.978148,.62932,-.777146,.207912,.45399],[.913545,-.970296,.615661,-.788011,.241922,.406737],[.93358,-.961262,.601815,-.798636,.275637,.358368],[.951057,-.951057,.587785,-.809017,.309017,.309017],[.965926,-.939693,.573576,-.819152,.34202,.258819],[.978148,-.927184,.559193,-.829038,.374607,.207912],[.987688,-.913545,.544639,-.838671,.406737,.156434],[.994522,-.898794,.529919,-.848048,.438371,.104528],[.99863,-.882948,.515038,-.857167,.469472,.052336],[1,-.866025,.5,-.866025,.5,0],[.99863,-.848048,.48481,-.87462,.529919,-.052336],[.994522,-.829038,.469472,-.882948,.559193,-.104528],[.987688,-.809017,.45399,-.891007,.587785,-.156434],[.978148,-.788011,.438371,-.898794,.615661,-.207912],[.965926,-.766044,.422618,-.906308,.642788,-.258819],[.951057,-.743145,.406737,-.913545,.669131,-.309017],[.93358,-.71934,.390731,-.920505,.694658,-.358368],[.913545,-.694658,.374607,-.927184,.71934,-.406737],[.891007,-.669131,.358368,-.93358,.743145,-.45399],[.866025,-.642788,.34202,-.939693,.766044,-.5],[.838671,-.615661,.325568,-.945519,.788011,-.544639],[.809017,-.587785,.309017,-.951057,.809017,-.587785],[.777146,-.559193,.292372,-.956305,.829038,-.62932],[.743145,-.529919,.275637,-.961262,.848048,-.669131],[.707107,-.5,.258819,-.965926,.866025,-.707107],[.669131,-.469472,.241922,-.970296,.882948,-.743145],[.62932,-.438371,.224951,-.97437,.898794,-.777146],[.587785,-.406737,.207912,-.978148,.913545,-.809017],[.544639,-.374607,.190809,-.981627,.927184,-.838671],[.5,-.34202,.173648,-.984808,.939693,-.866025],[.45399,-.309017,.156434,-.987688,.951057,-.891007],[.406737,-.275637,.139173,-.990268,.961262,-.913545],[.358368,-.241922,.121869,-.992546,.970296,-.93358],[.309017,-.207912,.104528,-.994522,.978148,-.951057],[.258819,-.173648,.087156,-.996195,.984808,-.965926],[.207912,-.139173,.069756,-.997564,.990268,-.978148],[.156434,-.104528,.052336,-.99863,.994522,-.987688],[.104528,-.069756,.034899,-.999391,.997564,-.994522],[.052336,-.034899,.017452,-.999848,.999391,-.99863],[0,-0,0,-1,1,-1],[-.052336,.034899,-.017452,-.999848,.999391,-.99863],[-.104528,.069756,-.034899,-.999391,.997564,-.994522],[-.156434,.104528,-.052336,-.99863,.994522,-.987688],[-.207912,.139173,-.069756,-.997564,.990268,-.978148],[-.258819,.173648,-.087156,-.996195,.984808,-.965926],[-.309017,.207912,-.104528,-.994522,.978148,-.951057],[-.358368,.241922,-.121869,-.992546,.970296,-.93358],[-.406737,.275637,-.139173,-.990268,.961262,-.913545],[-.45399,.309017,-.156434,-.987688,.951057,-.891007],[-.5,.34202,-.173648,-.984808,.939693,-.866025],[-.544639,.374607,-.190809,-.981627,.927184,-.838671],[-.587785,.406737,-.207912,-.978148,.913545,-.809017],[-.62932,.438371,-.224951,-.97437,.898794,-.777146],[-.669131,.469472,-.241922,-.970296,.882948,-.743145],[-.707107,.5,-.258819,-.965926,.866025,-.707107],[-.743145,.529919,-.275637,-.961262,.848048,-.669131],[-.777146,.559193,-.292372,-.956305,.829038,-.62932],[-.809017,.587785,-.309017,-.951057,.809017,-.587785],[-.838671,.615661,-.325568,-.945519,.788011,-.544639],[-.866025,.642788,-.34202,-.939693,.766044,-.5],[-.891007,.669131,-.358368,-.93358,.743145,-.45399],[-.913545,.694658,-.374607,-.927184,.71934,-.406737],[-.93358,.71934,-.390731,-.920505,.694658,-.358368],[-.951057,.743145,-.406737,-.913545,.669131,-.309017],[-.965926,.766044,-.422618,-.906308,.642788,-.258819],[-.978148,.788011,-.438371,-.898794,.615661,-.207912],[-.987688,.809017,-.45399,-.891007,.587785,-.156434],[-.994522,.829038,-.469472,-.882948,.559193,-.104528],[-.99863,.848048,-.48481,-.87462,.529919,-.052336],[-1,.866025,-.5,-.866025,.5,0],[-.99863,.882948,-.515038,-.857167,.469472,.052336],[-.994522,.898794,-.529919,-.848048,.438371,.104528],[-.987688,.913545,-.544639,-.838671,.406737,.156434],[-.978148,.927184,-.559193,-.829038,.374607,.207912],[-.965926,.939693,-.573576,-.819152,.34202,.258819],[-.951057,.951057,-.587785,-.809017,.309017,.309017],[-.93358,.961262,-.601815,-.798636,.275637,.358368],[-.913545,.970296,-.615661,-.788011,.241922,.406737],[-.891007,.978148,-.62932,-.777146,.207912,.45399],[-.866025,.984808,-.642788,-.766044,.173648,.5],[-.838671,.990268,-.656059,-.75471,.139173,.544639],[-.809017,.994522,-.669131,-.743145,.104528,.587785],[-.777146,.997564,-.681998,-.731354,.069756,.62932],[-.743145,.999391,-.694658,-.71934,.034899,.669131],[-.707107,1,-.707107,-.707107,0,.707107],[-.669131,.999391,-.71934,-.694658,-.034899,.743145],[-.62932,.997564,-.731354,-.681998,-.069756,.777146],[-.587785,.994522,-.743145,-.669131,-.104528,.809017],[-.544639,.990268,-.75471,-.656059,-.139173,.838671],[-.5,.984808,-.766044,-.642788,-.173648,.866025],[-.45399,.978148,-.777146,-.62932,-.207912,.891007],[-.406737,.970296,-.788011,-.615661,-.241922,.913545],[-.358368,.961262,-.798636,-.601815,-.275637,.93358],[-.309017,.951057,-.809017,-.587785,-.309017,.951057],[-.258819,.939693,-.819152,-.573576,-.34202,.965926],[-.207912,.927184,-.829038,-.559193,-.374607,.978148],[-.156434,.913545,-.838671,-.544639,-.406737,.987688],[-.104528,.898794,-.848048,-.529919,-.438371,.994522],[-.052336,.882948,-.857167,-.515038,-.469472,.99863],[-0,.866025,-.866025,-.5,-.5,1],[.052336,.848048,-.87462,-.48481,-.529919,.99863],[.104528,.829038,-.882948,-.469472,-.559193,.994522],[.156434,.809017,-.891007,-.45399,-.587785,.987688],[.207912,.788011,-.898794,-.438371,-.615661,.978148],[.258819,.766044,-.906308,-.422618,-.642788,.965926],[.309017,.743145,-.913545,-.406737,-.669131,.951057],[.358368,.71934,-.920505,-.390731,-.694658,.93358],[.406737,.694658,-.927184,-.374607,-.71934,.913545],[.45399,.669131,-.93358,-.358368,-.743145,.891007],[.5,.642788,-.939693,-.34202,-.766044,.866025],[.544639,.615661,-.945519,-.325568,-.788011,.838671],[.587785,.587785,-.951057,-.309017,-.809017,.809017],[.62932,.559193,-.956305,-.292372,-.829038,.777146],[.669131,.529919,-.961262,-.275637,-.848048,.743145],[.707107,.5,-.965926,-.258819,-.866025,.707107],[.743145,.469472,-.970296,-.241922,-.882948,.669131],[.777146,.438371,-.97437,-.224951,-.898794,.62932],[.809017,.406737,-.978148,-.207912,-.913545,.587785],[.838671,.374607,-.981627,-.190809,-.927184,.544639],[.866025,.34202,-.984808,-.173648,-.939693,.5],[.891007,.309017,-.987688,-.156434,-.951057,.45399],[.913545,.275637,-.990268,-.139173,-.961262,.406737],[.93358,.241922,-.992546,-.121869,-.970296,.358368],[.951057,.207912,-.994522,-.104528,-.978148,.309017],[.965926,.173648,-.996195,-.087156,-.984808,.258819],[.978148,.139173,-.997564,-.069756,-.990268,.207912],[.987688,.104528,-.99863,-.052336,-.994522,.156434],[.994522,.069756,-.999391,-.034899,-.997564,.104528],[.99863,.034899,-.999848,-.017452,-.999391,.052336],[1,0,-1,-0,-1,0],[.99863,-.034899,-.999848,.017452,-.999391,-.052336],[.994522,-.069756,-.999391,.034899,-.997564,-.104528],[.987688,-.104528,-.99863,.052336,-.994522,-.156434],[.978148,-.139173,-.997564,.069756,-.990268,-.207912],[.965926,-.173648,-.996195,.087156,-.984808,-.258819],[.951057,-.207912,-.994522,.104528,-.978148,-.309017],[.93358,-.241922,-.992546,.121869,-.970296,-.358368],[.913545,-.275637,-.990268,.139173,-.961262,-.406737],[.891007,-.309017,-.987688,.156434,-.951057,-.45399],[.866025,-.34202,-.984808,.173648,-.939693,-.5],[.838671,-.374607,-.981627,.190809,-.927184,-.544639],[.809017,-.406737,-.978148,.207912,-.913545,-.587785],[.777146,-.438371,-.97437,.224951,-.898794,-.62932],[.743145,-.469472,-.970296,.241922,-.882948,-.669131],[.707107,-.5,-.965926,.258819,-.866025,-.707107],[.669131,-.529919,-.961262,.275637,-.848048,-.743145],[.62932,-.559193,-.956305,.292372,-.829038,-.777146],[.587785,-.587785,-.951057,.309017,-.809017,-.809017],[.544639,-.615661,-.945519,.325568,-.788011,-.838671],[.5,-.642788,-.939693,.34202,-.766044,-.866025],[.45399,-.669131,-.93358,.358368,-.743145,-.891007],[.406737,-.694658,-.927184,.374607,-.71934,-.913545],[.358368,-.71934,-.920505,.390731,-.694658,-.93358],[.309017,-.743145,-.913545,.406737,-.669131,-.951057],[.258819,-.766044,-.906308,.422618,-.642788,-.965926],[.207912,-.788011,-.898794,.438371,-.615661,-.978148],[.156434,-.809017,-.891007,.45399,-.587785,-.987688],[.104528,-.829038,-.882948,.469472,-.559193,-.994522],[.052336,-.848048,-.87462,.48481,-.529919,-.99863],[0,-.866025,-.866025,.5,-.5,-1],[-.052336,-.882948,-.857167,.515038,-.469472,-.99863],[-.104528,-.898794,-.848048,.529919,-.438371,-.994522],[-.156434,-.913545,-.838671,.544639,-.406737,-.987688],[-.207912,-.927184,-.829038,.559193,-.374607,-.978148],[-.258819,-.939693,-.819152,.573576,-.34202,-.965926],[-.309017,-.951057,-.809017,.587785,-.309017,-.951057],[-.358368,-.961262,-.798636,.601815,-.275637,-.93358],[-.406737,-.970296,-.788011,.615661,-.241922,-.913545],[-.45399,-.978148,-.777146,.62932,-.207912,-.891007],[-.5,-.984808,-.766044,.642788,-.173648,-.866025],[-.544639,-.990268,-.75471,.656059,-.139173,-.838671],[-.587785,-.994522,-.743145,.669131,-.104528,-.809017],[-.62932,-.997564,-.731354,.681998,-.069756,-.777146],[-.669131,-.999391,-.71934,.694658,-.034899,-.743145],[-.707107,-1,-.707107,.707107,-0,-.707107],[-.743145,-.999391,-.694658,.71934,.034899,-.669131],[-.777146,-.997564,-.681998,.731354,.069756,-.62932],[-.809017,-.994522,-.669131,.743145,.104528,-.587785],[-.838671,-.990268,-.656059,.75471,.139173,-.544639],[-.866025,-.984808,-.642788,.766044,.173648,-.5],[-.891007,-.978148,-.62932,.777146,.207912,-.45399],[-.913545,-.970296,-.615661,.788011,.241922,-.406737],[-.93358,-.961262,-.601815,.798636,.275637,-.358368],[-.951057,-.951057,-.587785,.809017,.309017,-.309017],[-.965926,-.939693,-.573576,.819152,.34202,-.258819],[-.978148,-.927184,-.559193,.829038,.374607,-.207912],[-.987688,-.913545,-.544639,.838671,.406737,-.156434],[-.994522,-.898794,-.529919,.848048,.438371,-.104528],[-.99863,-.882948,-.515038,.857167,.469472,-.052336],[-1,-.866025,-.5,.866025,.5,-0],[-.99863,-.848048,-.48481,.87462,.529919,.052336],[-.994522,-.829038,-.469472,.882948,.559193,.104528],[-.987688,-.809017,-.45399,.891007,.587785,.156434],[-.978148,-.788011,-.438371,.898794,.615661,.207912],[-.965926,-.766044,-.422618,.906308,.642788,.258819],[-.951057,-.743145,-.406737,.913545,.669131,.309017],[-.93358,-.71934,-.390731,.920505,.694658,.358368],[-.913545,-.694658,-.374607,.927184,.71934,.406737],[-.891007,-.669131,-.358368,.93358,.743145,.45399],[-.866025,-.642788,-.34202,.939693,.766044,.5],[-.838671,-.615661,-.325568,.945519,.788011,.544639],[-.809017,-.587785,-.309017,.951057,.809017,.587785],[-.777146,-.559193,-.292372,.956305,.829038,.62932],[-.743145,-.529919,-.275637,.961262,.848048,.669131],[-.707107,-.5,-.258819,.965926,.866025,.707107],[-.669131,-.469472,-.241922,.970296,.882948,.743145],[-.62932,-.438371,-.224951,.97437,.898794,.777146],[-.587785,-.406737,-.207912,.978148,.913545,.809017],[-.544639,-.374607,-.190809,.981627,.927184,.838671],[-.5,-.34202,-.173648,.984808,.939693,.866025],[-.45399,-.309017,-.156434,.987688,.951057,.891007],[-.406737,-.275637,-.139173,.990268,.961262,.913545],[-.358368,-.241922,-.121869,.992546,.970296,.93358],[-.309017,-.207912,-.104528,.994522,.978148,.951057],[-.258819,-.173648,-.087156,.996195,.984808,.965926],[-.207912,-.139173,-.069756,.997564,.990268,.978148],[-.156434,-.104528,-.052336,.99863,.994522,.987688],[-.104528,-.069756,-.034899,.999391,.997564,.994522],[-.052336,-.034899,-.017452,.999848,.999391,.99863]],[[-1,-0,1,-0,0,-1,-0,0,-0],[-.999848,.017452,.999543,-.030224,264e-6,-.999086,.042733,-59e-5,4e-6],[-.999391,.034899,.998173,-.060411,.001055,-.996348,.085356,-.002357,34e-6],[-.99863,.052336,.995891,-.090524,.002372,-.991791,.127757,-.005297,113e-6],[-.997564,.069756,.992701,-.120527,.004214,-.985429,.169828,-.0094,268e-6],[-.996195,.087156,.988606,-.150384,.006578,-.977277,.21146,-.014654,523e-6],[-.994522,.104528,.983611,-.180057,.009462,-.967356,.252544,-.021043,903e-6],[-.992546,.121869,.977722,-.209511,.012862,-.955693,.292976,-.028547,.001431],[-.990268,.139173,.970946,-.238709,.016774,-.942316,.332649,-.037143,.002131],[-.987688,.156434,.963292,-.267617,.021193,-.927262,.371463,-.046806,.003026],[-.984808,.173648,.954769,-.296198,.026114,-.910569,.409317,-.057505,.00414],[-.981627,.190809,.945388,-.324419,.03153,-.892279,.446114,-.069209,.005492],[-.978148,.207912,.935159,-.352244,.037436,-.872441,.481759,-.08188,.007105],[-.97437,.224951,.924096,-.379641,.043823,-.851105,.516162,-.095481,.008999],[-.970296,.241922,.912211,-.406574,.050685,-.828326,.549233,-.109969,.011193],[-.965926,.258819,.899519,-.433013,.058013,-.804164,.580889,-.1253,.013707],[-.961262,.275637,.886036,-.458924,.065797,-.77868,.61105,-.141427,.016556],[-.956305,.292372,.871778,-.484275,.074029,-.75194,.639639,-.158301,.019758],[-.951057,.309017,.856763,-.509037,.082698,-.724012,.666583,-.175868,.023329],[-.945519,.325568,.841008,-.533178,.091794,-.694969,.691816,-.194075,.027281],[-.939693,.34202,.824533,-.55667,.101306,-.664885,.715274,-.212865,.03163],[-.93358,.358368,.807359,-.579484,.111222,-.633837,.736898,-.23218,.036385],[-.927184,.374607,.789505,-.601592,.121529,-.601904,.756637,-.25196,.041559],[-.920505,.390731,.770994,-.622967,.132217,-.569169,.774442,-.272143,.04716],[-.913545,.406737,.751848,-.643582,.143271,-.535715,.79027,-.292666,.053196],[-.906308,.422618,.732091,-.663414,.154678,-.501627,.804083,-.313464,.059674],[-.898794,.438371,.711746,-.682437,.166423,-.466993,.81585,-.334472,.066599],[-.891007,.45399,.690839,-.700629,.178494,-.431899,.825544,-.355623,.073974],[-.882948,.469472,.669395,-.717968,.190875,-.396436,.833145,-.376851,.081803],[-.87462,.48481,.647439,-.734431,.203551,-.360692,.838638,-.398086,.090085],[-.866025,.5,.625,-.75,.216506,-.32476,.842012,-.419263,.098821],[-.857167,.515038,.602104,-.764655,.229726,-.288728,.843265,-.440311,.108009],[-.848048,.529919,.578778,-.778378,.243192,-.252688,.842399,-.461164,.117644],[-.838671,.544639,.555052,-.791154,.256891,-.21673,.839422,-.481753,.127722],[-.829038,.559193,.530955,-.802965,.270803,-.180944,.834347,-.502011,.138237],[-.819152,.573576,.506515,-.813798,.284914,-.14542,.827194,-.521871,.149181],[-.809017,.587785,.481763,-.823639,.299204,-.110246,.817987,-.541266,.160545],[-.798636,.601815,.456728,-.832477,.313658,-.075508,.806757,-.560132,.172317],[-.788011,.615661,.431441,-.840301,.328257,-.041294,.793541,-.578405,.184487],[-.777146,.62932,.405934,-.847101,.342984,-.007686,.778379,-.596021,.19704],[-.766044,.642788,.380236,-.852869,.357821,.025233,.761319,-.612921,.209963],[-.75471,.656059,.35438,-.857597,.372749,.057383,.742412,-.629044,.223238],[-.743145,.669131,.328396,-.861281,.387751,.088686,.721714,-.644334,.23685],[-.731354,.681998,.302317,-.863916,.402807,.119068,.699288,-.658734,.250778],[-.71934,.694658,.276175,-.865498,.417901,.148454,.675199,-.67219,.265005],[-.707107,.707107,.25,-.866025,.433013,.176777,.649519,-.684653,.279508],[-.694658,.71934,.223825,-.865498,.448125,.203969,.622322,-.696073,.294267],[-.681998,.731354,.197683,-.863916,.463218,.229967,.593688,-.706405,.309259],[-.669131,.743145,.171604,-.861281,.478275,.254712,.5637,-.715605,.324459],[-.656059,.75471,.14562,-.857597,.493276,.278147,.532443,-.723633,.339844],[-.642788,.766044,.119764,-.852869,.508205,.300221,.500009,-.730451,.355387],[-.62932,.777146,.094066,-.847101,.523041,.320884,.46649,-.736025,.371063],[-.615661,.788011,.068559,-.840301,.537768,.340093,.431982,-.740324,.386845],[-.601815,.798636,.043272,-.832477,.552367,.357807,.396584,-.74332,.402704],[-.587785,.809017,.018237,-.823639,.566821,.373991,.360397,-.744989,.418613],[-.573576,.819152,-.006515,-.813798,.581112,.388612,.323524,-.745308,.434544],[-.559193,.829038,-.030955,-.802965,.595222,.401645,.286069,-.744262,.450467],[-.544639,.838671,-.055052,-.791154,.609135,.413066,.24814,-.741835,.466352],[-.529919,.848048,-.078778,-.778378,.622833,.422856,.209843,-.738017,.482171],[-.515038,.857167,-.102104,-.764655,.6363,.431004,.171288,-.732801,.497894],[-.5,.866025,-.125,-.75,.649519,.4375,.132583,-.726184,.51349],[-.48481,.87462,-.147439,-.734431,.662474,.44234,.093837,-.718167,.528929],[-.469472,.882948,-.169395,-.717968,.67515,.445524,.05516,-.708753,.544183],[-.45399,.891007,-.190839,-.700629,.687531,.447059,.016662,-.69795,.55922],[-.438371,.898794,-.211746,-.682437,.699602,.446953,-.02155,-.685769,.574011],[-.422618,.906308,-.232091,-.663414,.711348,.445222,-.059368,-.672226,.588528],[-.406737,.913545,-.251848,-.643582,.722755,.441884,-.096684,-.657339,.602741],[-.390731,.920505,-.270994,-.622967,.733809,.436964,-.133395,-.64113,.616621],[-.374607,.927184,-.289505,-.601592,.744496,.430488,-.169397,-.623624,.630141],[-.358368,.93358,-.307359,-.579484,.754804,.422491,-.204589,-.604851,.643273],[-.34202,.939693,-.324533,-.55667,.76472,.413008,-.238872,-.584843,.65599],[-.325568,.945519,-.341008,-.533178,.774231,.402081,-.27215,-.563635,.668267],[-.309017,.951057,-.356763,-.509037,.783327,.389754,-.304329,-.541266,.680078],[-.292372,.956305,-.371778,-.484275,.791997,.376077,-.335319,-.517778,.691399],[-.275637,.961262,-.386036,-.458924,.800228,.361102,-.365034,-.493216,.702207],[-.258819,.965926,-.399519,-.433013,.808013,.344885,-.393389,-.467627,.712478],[-.241922,.970296,-.412211,-.406574,.81534,.327486,-.420306,-.441061,.722191],[-.224951,.97437,-.424096,-.379641,.822202,.308969,-.445709,-.413572,.731327],[-.207912,.978148,-.435159,-.352244,.828589,.289399,-.469527,-.385215,.739866],[-.190809,.981627,-.445388,-.324419,.834495,.268846,-.491693,-.356047,.74779],[-.173648,.984808,-.454769,-.296198,.839912,.247382,-.512145,-.326129,.755082],[-.156434,.987688,-.463292,-.267617,.844832,.225081,-.530827,-.295521,.761728],[-.139173,.990268,-.470946,-.238709,.849251,.20202,-.547684,-.264287,.767712],[-.121869,.992546,-.477722,-.209511,.853163,.178279,-.562672,-.232494,.773023],[-.104528,.994522,-.483611,-.180057,.856563,.153937,-.575747,-.200207,.777648],[-.087156,.996195,-.488606,-.150384,.859447,.129078,-.586872,-.167494,.781579],[-.069756,.997564,-.492701,-.120527,.861811,.103786,-.596018,-.134426,.784806],[-.052336,.99863,-.495891,-.090524,.863653,.078146,-.603158,-.101071,.787324],[-.034899,.999391,-.498173,-.060411,.864971,.052243,-.608272,-.0675,.789126],[-.017452,.999848,-.499543,-.030224,.865762,.026165,-.611347,-.033786,.790208],[0,1,-.5,0,.866025,-0,-.612372,0,.790569],[.017452,.999848,-.499543,.030224,.865762,-.026165,-.611347,.033786,.790208],[.034899,.999391,-.498173,.060411,.864971,-.052243,-.608272,.0675,.789126],[.052336,.99863,-.495891,.090524,.863653,-.078146,-.603158,.101071,.787324],[.069756,.997564,-.492701,.120527,.861811,-.103786,-.596018,.134426,.784806],[.087156,.996195,-.488606,.150384,.859447,-.129078,-.586872,.167494,.781579],[.104528,.994522,-.483611,.180057,.856563,-.153937,-.575747,.200207,.777648],[.121869,.992546,-.477722,.209511,.853163,-.178279,-.562672,.232494,.773023],[.139173,.990268,-.470946,.238709,.849251,-.20202,-.547684,.264287,.767712],[.156434,.987688,-.463292,.267617,.844832,-.225081,-.530827,.295521,.761728],[.173648,.984808,-.454769,.296198,.839912,-.247382,-.512145,.326129,.755082],[.190809,.981627,-.445388,.324419,.834495,-.268846,-.491693,.356047,.74779],[.207912,.978148,-.435159,.352244,.828589,-.289399,-.469527,.385215,.739866],[.224951,.97437,-.424096,.379641,.822202,-.308969,-.445709,.413572,.731327],[.241922,.970296,-.412211,.406574,.81534,-.327486,-.420306,.441061,.722191],[.258819,.965926,-.399519,.433013,.808013,-.344885,-.393389,.467627,.712478],[.275637,.961262,-.386036,.458924,.800228,-.361102,-.365034,.493216,.702207],[.292372,.956305,-.371778,.484275,.791997,-.376077,-.335319,.517778,.691399],[.309017,.951057,-.356763,.509037,.783327,-.389754,-.304329,.541266,.680078],[.325568,.945519,-.341008,.533178,.774231,-.402081,-.27215,.563635,.668267],[.34202,.939693,-.324533,.55667,.76472,-.413008,-.238872,.584843,.65599],[.358368,.93358,-.307359,.579484,.754804,-.422491,-.204589,.604851,.643273],[.374607,.927184,-.289505,.601592,.744496,-.430488,-.169397,.623624,.630141],[.390731,.920505,-.270994,.622967,.733809,-.436964,-.133395,.64113,.616621],[.406737,.913545,-.251848,.643582,.722755,-.441884,-.096684,.657339,.602741],[.422618,.906308,-.232091,.663414,.711348,-.445222,-.059368,.672226,.588528],[.438371,.898794,-.211746,.682437,.699602,-.446953,-.02155,.685769,.574011],[.45399,.891007,-.190839,.700629,.687531,-.447059,.016662,.69795,.55922],[.469472,.882948,-.169395,.717968,.67515,-.445524,.05516,.708753,.544183],[.48481,.87462,-.147439,.734431,.662474,-.44234,.093837,.718167,.528929],[.5,.866025,-.125,.75,.649519,-.4375,.132583,.726184,.51349],[.515038,.857167,-.102104,.764655,.6363,-.431004,.171288,.732801,.497894],[.529919,.848048,-.078778,.778378,.622833,-.422856,.209843,.738017,.482171],[.544639,.838671,-.055052,.791154,.609135,-.413066,.24814,.741835,.466352],[.559193,.829038,-.030955,.802965,.595222,-.401645,.286069,.744262,.450467],[.573576,.819152,-.006515,.813798,.581112,-.388612,.323524,.745308,.434544],[.587785,.809017,.018237,.823639,.566821,-.373991,.360397,.744989,.418613],[.601815,.798636,.043272,.832477,.552367,-.357807,.396584,.74332,.402704],[.615661,.788011,.068559,.840301,.537768,-.340093,.431982,.740324,.386845],[.62932,.777146,.094066,.847101,.523041,-.320884,.46649,.736025,.371063],[.642788,.766044,.119764,.852869,.508205,-.300221,.500009,.730451,.355387],[.656059,.75471,.14562,.857597,.493276,-.278147,.532443,.723633,.339844],[.669131,.743145,.171604,.861281,.478275,-.254712,.5637,.715605,.324459],[.681998,.731354,.197683,.863916,.463218,-.229967,.593688,.706405,.309259],[.694658,.71934,.223825,.865498,.448125,-.203969,.622322,.696073,.294267],[.707107,.707107,.25,.866025,.433013,-.176777,.649519,.684653,.279508],[.71934,.694658,.276175,.865498,.417901,-.148454,.675199,.67219,.265005],[.731354,.681998,.302317,.863916,.402807,-.119068,.699288,.658734,.250778],[.743145,.669131,.328396,.861281,.387751,-.088686,.721714,.644334,.23685],[.75471,.656059,.35438,.857597,.372749,-.057383,.742412,.629044,.223238],[.766044,.642788,.380236,.852869,.357821,-.025233,.761319,.612921,.209963],[.777146,.62932,.405934,.847101,.342984,.007686,.778379,.596021,.19704],[.788011,.615661,.431441,.840301,.328257,.041294,.793541,.578405,.184487],[.798636,.601815,.456728,.832477,.313658,.075508,.806757,.560132,.172317],[.809017,.587785,.481763,.823639,.299204,.110246,.817987,.541266,.160545],[.819152,.573576,.506515,.813798,.284914,.14542,.827194,.521871,.149181],[.829038,.559193,.530955,.802965,.270803,.180944,.834347,.502011,.138237],[.838671,.544639,.555052,.791154,.256891,.21673,.839422,.481753,.127722],[.848048,.529919,.578778,.778378,.243192,.252688,.842399,.461164,.117644],[.857167,.515038,.602104,.764655,.229726,.288728,.843265,.440311,.108009],[.866025,.5,.625,.75,.216506,.32476,.842012,.419263,.098821],[.87462,.48481,.647439,.734431,.203551,.360692,.838638,.398086,.090085],[.882948,.469472,.669395,.717968,.190875,.396436,.833145,.376851,.081803],[.891007,.45399,.690839,.700629,.178494,.431899,.825544,.355623,.073974],[.898794,.438371,.711746,.682437,.166423,.466993,.81585,.334472,.066599],[.906308,.422618,.732091,.663414,.154678,.501627,.804083,.313464,.059674],[.913545,.406737,.751848,.643582,.143271,.535715,.79027,.292666,.053196],[.920505,.390731,.770994,.622967,.132217,.569169,.774442,.272143,.04716],[.927184,.374607,.789505,.601592,.121529,.601904,.756637,.25196,.041559],[.93358,.358368,.807359,.579484,.111222,.633837,.736898,.23218,.036385],[.939693,.34202,.824533,.55667,.101306,.664885,.715274,.212865,.03163],[.945519,.325568,.841008,.533178,.091794,.694969,.691816,.194075,.027281],[.951057,.309017,.856763,.509037,.082698,.724012,.666583,.175868,.023329],[.956305,.292372,.871778,.484275,.074029,.75194,.639639,.158301,.019758],[.961262,.275637,.886036,.458924,.065797,.77868,.61105,.141427,.016556],[.965926,.258819,.899519,.433013,.058013,.804164,.580889,.1253,.013707],[.970296,.241922,.912211,.406574,.050685,.828326,.549233,.109969,.011193],[.97437,.224951,.924096,.379641,.043823,.851105,.516162,.095481,.008999],[.978148,.207912,.935159,.352244,.037436,.872441,.481759,.08188,.007105],[.981627,.190809,.945388,.324419,.03153,.892279,.446114,.069209,.005492],[.984808,.173648,.954769,.296198,.026114,.910569,.409317,.057505,.00414],[.987688,.156434,.963292,.267617,.021193,.927262,.371463,.046806,.003026],[.990268,.139173,.970946,.238709,.016774,.942316,.332649,.037143,.002131],[.992546,.121869,.977722,.209511,.012862,.955693,.292976,.028547,.001431],[.994522,.104528,.983611,.180057,.009462,.967356,.252544,.021043,903e-6],[.996195,.087156,.988606,.150384,.006578,.977277,.21146,.014654,523e-6],[.997564,.069756,.992701,.120527,.004214,.985429,.169828,.0094,268e-6],[.99863,.052336,.995891,.090524,.002372,.991791,.127757,.005297,113e-6],[.999391,.034899,.998173,.060411,.001055,.996348,.085356,.002357,34e-6],[.999848,.017452,.999543,.030224,264e-6,.999086,.042733,59e-5,4e-6],[1,-0,1,-0,0,1,-0,0,-0]]],e.SPHERICAL_HARMONICS_AZIMUTH_RESOLUTION=e.SPHERICAL_HARMONICS[0].length,e.SPHERICAL_HARMONICS_ELEVATION_RESOLUTION=e.SPHERICAL_HARMONICS[1].length,e.SPHERICAL_HARMONICS_MAX_ORDER=e.SPHERICAL_HARMONICS[0][0].length/2,e.MAX_RE_WEIGHTS=[[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1,1,1,1],[1.003236,1.002156,.999152,.990038],[1.03237,1.021194,.990433,.898572],[1.062694,1.040231,.979161,.799806],[1.093999,1.058954,.964976,.693603],[1.126003,1.077006,.947526,.57989],[1.158345,1.093982,.926474,.45869],[1.19059,1.109437,.901512,.330158],[1.222228,1.12289,.87237,.194621],[1.252684,1.133837,.838839,.052614],[1.281987,1.142358,.801199,0],[1.312073,1.150207,.760839,0],[1.343011,1.157424,.717799,0],[1.374649,1.163859,.671999,0],[1.406809,1.169354,.623371,0],[1.439286,1.173739,.571868,0],[1.471846,1.176837,.517465,0],[1.504226,1.178465,.460174,0],[1.536133,1.178438,.400043,0],[1.567253,1.176573,.337165,0],[1.597247,1.172695,.271688,0],[1.625766,1.166645,.203815,0],[1.652455,1.158285,.133806,0],[1.676966,1.147506,.061983,0],[1.699006,1.134261,0,0],[1.720224,1.119789,0,0],[1.741631,1.10481,0,0],[1.763183,1.08933,0,0],[1.784837,1.073356,0,0],[1.806548,1.056898,0,0],[1.828269,1.039968,0,0],[1.849952,1.02258,0,0],[1.871552,1.004752,0,0],[1.893018,.986504,0,0],[1.914305,.967857,0,0],[1.935366,.948837,0,0],[1.956154,.929471,0,0],[1.976625,.90979,0,0],[1.996736,.889823,0,0],[2.016448,.869607,0,0],[2.035721,.849175,0,0],[2.054522,.828565,0,0],[2.072818,.807816,0,0],[2.090581,.786964,0,0],[2.107785,.766051,0,0],[2.124411,.745115,0,0],[2.140439,.724196,0,0],[2.155856,.703332,0,0],[2.170653,.682561,0,0],[2.184823,.661921,0,0],[2.198364,.641445,0,0],[2.211275,.621169,0,0],[2.223562,.601125,0,0],[2.23523,.581341,0,0],[2.246289,.561847,0,0],[2.256751,.542667,0,0],[2.266631,.523826,0,0],[2.275943,.505344,0,0],[2.284707,.487239,0,0],[2.292939,.469528,0,0],[2.300661,.452225,0,0],[2.307892,.435342,0,0],[2.314654,.418888,0,0],[2.320969,.40287,0,0],[2.326858,.387294,0,0],[2.332343,.372164,0,0],[2.337445,.357481,0,0],[2.342186,.343246,0,0],[2.346585,.329458,0,0],[2.350664,.316113,0,0],[2.354442,.303208,0,0],[2.357937,.290738,0,0],[2.361168,.278698,0,0],[2.364152,.26708,0,0],[2.366906,.255878,0,0],[2.369446,.245082,0,0],[2.371786,.234685,0,0],[2.37394,.224677,0,0],[2.375923,.215048,0,0],[2.377745,.20579,0,0],[2.379421,.196891,0,0],[2.380959,.188342,0,0],[2.382372,.180132,0,0],[2.383667,.172251,0,0],[2.384856,.164689,0,0],[2.385945,.157435,0,0],[2.386943,.150479,0,0],[2.387857,.143811,0,0],[2.388694,.137421,0,0],[2.38946,.131299,0,0],[2.39016,.125435,0,0],[2.390801,.11982,0,0],[2.391386,.114445,0,0],[2.391921,.1093,0,0],[2.39241,.104376,0,0],[2.392857,.099666,0,0],[2.393265,.09516,0,0],[2.393637,.090851,0,0],[2.393977,.086731,0,0],[2.394288,.082791,0,0],[2.394571,.079025,0,0],[2.394829,.075426,0,0],[2.395064,.071986,0,0],[2.395279,.068699,0,0],[2.395475,.065558,0,0],[2.395653,.062558,0,0],[2.395816,.059693,0,0],[2.395964,.056955,0,0],[2.396099,.054341,0,0],[2.396222,.051845,0,0],[2.396334,.049462,0,0],[2.396436,.047186,0,0],[2.396529,.045013,0,0],[2.396613,.042939,0,0],[2.396691,.040959,0,0],[2.396761,.039069,0,0],[2.396825,.037266,0,0],[2.396883,.035544,0,0],[2.396936,.033901,0,0],[2.396984,.032334,0,0],[2.397028,.030838,0,0],[2.397068,.02941,0,0],[2.397104,.028048,0,0],[2.397137,.026749,0,0],[2.397167,.025509,0,0],[2.397194,.024326,0,0],[2.397219,.023198,0,0],[2.397242,.022122,0,0],[2.397262,.021095,0,0],[2.397281,.020116,0,0],[2.397298,.019181,0,0],[2.397314,.01829,0,0],[2.397328,.017441,0,0],[2.397341,.01663,0,0],[2.397352,.015857,0,0],[2.397363,.015119,0,0],[2.397372,.014416,0,0],[2.397381,.013745,0,0],[2.397389,.013106,0,0],[2.397396,.012496,0,0],[2.397403,.011914,0,0],[2.397409,.01136,0,0],[2.397414,.010831,0,0],[2.397419,.010326,0,0],[2.397424,.009845,0,0],[2.397428,.009387,0,0],[2.397432,.008949,0,0],[2.397435,.008532,0,0],[2.397438,.008135,0,0],[2.397441,.007755,0,0],[2.397443,.007394,0,0],[2.397446,.007049,0,0],[2.397448,.006721,0,0],[2.39745,.006407,0,0],[2.397451,.006108,0,0],[2.397453,.005824,0,0],[2.397454,.005552,0,0],[2.397456,.005293,0,0],[2.397457,.005046,0,0],[2.397458,.004811,0,0],[2.397459,.004586,0,0],[2.39746,.004372,0,0],[2.397461,.004168,0,0],[2.397461,.003974,0,0],[2.397462,.003788,0,0],[2.397463,.003611,0,0],[2.397463,.003443,0,0],[2.397464,.003282,0,0],[2.397464,.003129,0,0],[2.397465,.002983,0,0],[2.397465,.002844,0,0],[2.397465,.002711,0,0],[2.397466,.002584,0,0],[2.397466,.002464,0,0],[2.397466,.002349,0,0],[2.397466,.002239,0,0],[2.397467,.002135,0,0],[2.397467,.002035,0,0],[2.397467,.00194,0,0],[2.397467,.001849,0,0],[2.397467,.001763,0,0],[2.397467,.001681,0,0],[2.397468,.001602,0,0],[2.397468,.001527,0,0],[2.397468,.001456,0,0],[2.397468,.001388,0,0],[2.397468,.001323,0,0],[2.397468,.001261,0,0],[2.397468,.001202,0,0],[2.397468,.001146,0,0],[2.397468,.001093,0,0],[2.397468,.001042,0,0],[2.397468,993e-6,0,0],[2.397468,947e-6,0,0],[2.397468,902e-6,0,0],[2.397468,86e-5,0,0],[2.397468,82e-5,0,0],[2.397469,782e-6,0,0],[2.397469,745e-6,0,0],[2.397469,71e-5,0,0],[2.397469,677e-6,0,0],[2.397469,646e-6,0,0],[2.397469,616e-6,0,0],[2.397469,587e-6,0,0],[2.397469,559e-6,0,0],[2.397469,533e-6,0,0],[2.397469,508e-6,0,0],[2.397469,485e-6,0,0],[2.397469,462e-6,0,0],[2.397469,44e-5,0,0],[2.397469,42e-5,0,0],[2.397469,4e-4,0,0],[2.397469,381e-6,0,0],[2.397469,364e-6,0,0],[2.397469,347e-6,0,0],[2.397469,33e-5,0,0],[2.397469,315e-6,0,0],[2.397469,3e-4,0,0],[2.397469,286e-6,0,0],[2.397469,273e-6,0,0],[2.397469,26e-5,0,0],[2.397469,248e-6,0,0],[2.397469,236e-6,0,0],[2.397469,225e-6,0,0],[2.397469,215e-6,0,0],[2.397469,205e-6,0,0],[2.397469,195e-6,0,0],[2.397469,186e-6,0,0],[2.397469,177e-6,0,0],[2.397469,169e-6,0,0],[2.397469,161e-6,0,0],[2.397469,154e-6,0,0],[2.397469,147e-6,0,0],[2.397469,14e-5,0,0],[2.397469,133e-6,0,0],[2.397469,127e-6,0,0],[2.397469,121e-6,0,0],[2.397469,115e-6,0,0],[2.397469,11e-5,0,0],[2.397469,105e-6,0,0],[2.397469,1e-4,0,0],[2.397469,95e-6,0,0],[2.397469,91e-6,0,0],[2.397469,87e-6,0,0],[2.397469,83e-6,0,0],[2.397469,79e-6,0,0],[2.397469,75e-6,0,0],[2.397469,71e-6,0,0],[2.397469,68e-6,0,0],[2.397469,65e-6,0,0],[2.397469,62e-6,0,0],[2.397469,59e-6,0,0],[2.397469,56e-6,0,0],[2.397469,54e-6,0,0],[2.397469,51e-6,0,0],[2.397469,49e-6,0,0],[2.397469,46e-6,0,0],[2.397469,44e-6,0,0],[2.397469,42e-6,0,0],[2.397469,4e-5,0,0],[2.397469,38e-6,0,0],[2.397469,37e-6,0,0],[2.397469,35e-6,0,0],[2.397469,33e-6,0,0],[2.397469,32e-6,0,0],[2.397469,3e-5,0,0],[2.397469,29e-6,0,0],[2.397469,27e-6,0,0],[2.397469,26e-6,0,0],[2.397469,25e-6,0,0],[2.397469,24e-6,0,0],[2.397469,23e-6,0,0],[2.397469,22e-6,0,0],[2.397469,21e-6,0,0],[2.397469,2e-5,0,0],[2.397469,19e-6,0,0],[2.397469,18e-6,0,0],[2.397469,17e-6,0,0],[2.397469,16e-6,0,0],[2.397469,15e-6,0,0],[2.397469,15e-6,0,0],[2.397469,14e-6,0,0],[2.397469,13e-6,0,0],[2.397469,13e-6,0,0],[2.397469,12e-6,0,0],[2.397469,12e-6,0,0],[2.397469,11e-6,0,0],[2.397469,11e-6,0,0],[2.397469,1e-5,0,0],[2.397469,1e-5,0,0],[2.397469,9e-6,0,0],[2.397469,9e-6,0,0],[2.397469,8e-6,0,0],[2.397469,8e-6,0,0],[2.397469,8e-6,0,0],[2.397469,7e-6,0,0],[2.397469,7e-6,0,0],[2.397469,7e-6,0,0],[2.397469,6e-6,0,0],[2.397469,6e-6,0,0],[2.397469,6e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,5e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,4e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,3e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,2e-6,0,0],[2.397469,1e-6,0,0],[2.397469,1e-6,0,0],[2.397469,1e-6,0,0]],e.MAX_RE_WEIGHTS_RESOLUTION=e.MAX_RE_WEIGHTS.length},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(5),i=t(6),r=t(1),o=t(0);function s(n,e){void 0==e&&(e={}),void 0==e.position&&(e.position=o.DEFAULT_POSITION.slice()),void 0==e.forward&&(e.forward=o.DEFAULT_FORWARD.slice()),void 0==e.up&&(e.up=o.DEFAULT_UP.slice()),void 0==e.minDistance&&(e.minDistance=o.DEFAULT_MIN_DISTANCE),void 0==e.maxDistance&&(e.maxDistance=o.DEFAULT_MAX_DISTANCE),void 0==e.rolloff&&(e.rolloff=o.DEFAULT_ROLLOFF),void 0==e.gain&&(e.gain=o.DEFAULT_SOURCE_GAIN),void 0==e.alpha&&(e.alpha=o.DEFAULT_DIRECTIVITY_ALPHA),void 0==e.sharpness&&(e.sharpness=o.DEFAULT_DIRECTIVITY_SHARPNESS),void 0==e.sourceWidth&&(e.sourceWidth=o.DEFAULT_SOURCE_WIDTH),this._scene=n,this._position=e.position,this._forward=e.forward,this._up=e.up,this._dx=new Float32Array(3),this._right=o.crossProduct(this._forward,this._up);let t=n._context;this.input=t.createGain(),this._directivity=new A(t,{alpha:e.alpha,sharpness:e.sharpness}),this._toEarly=t.createGain(),this._toLate=t.createGain(),this._attenuation=new i(t,{minDistance:e.minDistance,maxDistance:e.maxDistance,rolloff:e.rolloff}),this._encoder=new r(t,{ambisonicOrder:n._ambisonicOrder,sourceWidth:e.sourceWidth}),this.input.connect(this._toLate),this._toLate.connect(n._room.late.input),this.input.connect(this._attenuation.input),this._attenuation.output.connect(this._toEarly),this._toEarly.connect(n._room.early.input),this._attenuation.output.connect(this._directivity.input),this._directivity.output.connect(this._encoder.input),this._encoder.output.connect(n._listener.input),this.setPosition(e.position[0],e.position[1],e.position[2]),this.input.gain.value=e.gain}s.prototype.setPosition=function(n,e,t){this._position[0]=n,this._position[1]=e,this._position[2]=t;let A=function(n){let e=1;n>o.EPSILON_FLOAT&&(e=1-n/o.SOURCE_MAX_OUTSIDE_ROOM_DISTANCE,e=Math.max(0,Math.min(1,e)));return e}(this._scene._room.getDistanceOutsideRoom(this._position[0],this._position[1],this._position[2]));this._toLate.gain.value=A,this._toEarly.gain.value=A,this._update()},s.prototype._update=function(){for(let A=0;A<3;A++)this._dx[A]=this._position[A]-this._scene._listener.position[A];let n=Math.sqrt(this._dx[0]*this._dx[0]+this._dx[1]*this._dx[1]+this._dx[2]*this._dx[2]);n>0&&(this._dx[0]/=n,this._dx[1]/=n,this._dx[2]/=n);let e=Math.atan2(-this._dx[0],this._dx[2])*o.RADIANS_TO_DEGREES,t=Math.atan2(this._dx[1],Math.sqrt(this._dx[0]*this._dx[0]+this._dx[2]*this._dx[2]))*o.RADIANS_TO_DEGREES;this._attenuation.setDistance(n),this._directivity.computeAngle(this._forward,this._dx),this._encoder.setDirection(e,t)},s.prototype.setRolloff=function(n){this._attenuation.setRolloff(n)},s.prototype.setMinDistance=function(n){this._attenuation.minDistance=n},s.prototype.setMaxDistance=function(n){this._attenuation.maxDistance=n},s.prototype.setGain=function(n){this.input.gain.value=n},s.prototype.setOrientation=function(n,e,t,A,i,r){this._forward[0]=n,this._forward[1]=e,this._forward[2]=t,this._up[0]=A,this._up[1]=i,this._up[2]=r,this._right=o.crossProduct(this._forward,this._up)},s.prototype.setFromMatrix=function(n){this._right[0]=n.elements[0],this._right[1]=n.elements[1],this._right[2]=n.elements[2],this._up[0]=n.elements[4],this._up[1]=n.elements[5],this._up[2]=n.elements[6],this._forward[0]=n.elements[8],this._forward[1]=n.elements[9],this._forward[2]=n.elements[10],this._right=o.normalizeVector(this._right),this._up=o.normalizeVector(this._up),this._forward=o.normalizeVector(this._forward),this.setPosition(n.elements[12],n.elements[13],n.elements[14])},s.prototype.setSourceWidth=function(n){this._encoder.setSourceWidth(n),this.setPosition(this._position[0],this._position[1],this._position[2])},s.prototype.setDirectivityPattern=function(n,e){this._directivity.setPattern(n,e),this.setPosition(this._position[0],this._position[1],this._position[2])},n.exports=s},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(0);function i(n,e){void 0==e&&(e={}),void 0==e.alpha&&(e.alpha=A.DEFAULT_DIRECTIVITY_ALPHA),void 0==e.sharpness&&(e.sharpness=A.DEFAULT_DIRECTIVITY_SHARPNESS),this._context=n,this._lowpass=n.createBiquadFilter(),this._lowpass.type="lowpass",this._lowpass.Q.value=0,this._lowpass.frequency.value=.5*n.sampleRate,this._cosTheta=0,this.setPattern(e.alpha,e.sharpness),this.input=this._lowpass,this.output=this._lowpass}i.prototype.computeAngle=function(n,e){let t=A.normalizeVector(n),i=A.normalizeVector(e),r=1;if(this._alpha>A.EPSILON_FLOAT){let n=t[0]*i[0]+t[1]*i[1]+t[2]*i[2];r=1-this._alpha+this._alpha*n,r=Math.pow(Math.abs(r),this._sharpness)}this._lowpass.frequency.value=.5*this._context.sampleRate*r},i.prototype.setPattern=function(n,e){this._alpha=Math.min(1,Math.max(0,n)),this._sharpness=Math.max(1,e),this.computeAngle([this._cosTheta*this._cosTheta,0,0],[1,0,0])},n.exports=i},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(0);function i(n,e){void 0==e&&(e={}),void 0==e.minDistance&&(e.minDistance=A.DEFAULT_MIN_DISTANCE),void 0==e.maxDistance&&(e.maxDistance=A.DEFAULT_MAX_DISTANCE),void 0==e.rolloff&&(e.rolloff=A.DEFAULT_ATTENUATION_ROLLOFF),this.minDistance=e.minDistance,this.maxDistance=e.maxDistance,this.setRolloff(e.rolloff),this._gainNode=n.createGain(),this.setDistance(e.maxDistance),this.input=this._gainNode,this.output=this._gainNode}i.prototype.setDistance=function(n){let e=1;if("logarithmic"==this._rolloff){if(n>this.maxDistance)e=0;else if(n>this.minDistance){let t=this.maxDistance-this.minDistance;if(t>A.EPSILON_FLOAT){let A=1/(t+1);e=(1/(n-this.minDistance+1)-A)/(1-A)}}}else if("linear"==this._rolloff)if(n>this.maxDistance)e=0;else if(n>this.minDistance){let t=this.maxDistance-this.minDistance;t>A.EPSILON_FLOAT&&(e=(this.maxDistance-n)/t)}this._gainNode.gain.value=e},i.prototype.setRolloff=function(n){let e=~A.ATTENUATION_ROLLOFFS.indexOf(n);void 0!=n&&e?n=n.toString().toLowerCase():(e||A.log('Invalid rolloff model ("'+n+'"). Using default: "'+A.DEFAULT_ATTENUATION_ROLLOFF+'".'),n=A.DEFAULT_ATTENUATION_ROLLOFF),this._rolloff=n},n.exports=i},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(8),i=t(9),r=t(0);function o(n){let e={};for(let t in r.DEFAULT_ROOM_MATERIALS)r.DEFAULT_ROOM_MATERIALS.hasOwnProperty(t)&&(e[t]=r.ROOM_MATERIAL_COEFFICIENTS[r.DEFAULT_ROOM_MATERIALS[t]]);void 0==n&&(n={},Object.assign(n,r.DEFAULT_ROOM_MATERIALS));for(let t in r.DEFAULT_ROOM_MATERIALS)r.DEFAULT_ROOM_MATERIALS.hasOwnProperty(t)&&n.hasOwnProperty(t)?n[t]in r.ROOM_MATERIAL_COEFFICIENTS?e[t]=r.ROOM_MATERIAL_COEFFICIENTS[n[t]]:r.log('Material "'+n[t]+'" on wall "'+t+'" not found. Using "'+r.DEFAULT_ROOM_MATERIALS[t]+'".'):r.log('Wall "'+t+'" is not defined. Default used.');return e}function s(n){void 0==n&&(n={});for(let e in r.DEFAULT_ROOM_DIMENSIONS)n.hasOwnProperty(e)||(n[e]=r.DEFAULT_ROOM_DIMENSIONS[e]);return n}function a(n,e,t){let A=new Float32Array(r.NUMBER_REVERB_FREQUENCY_BANDS);n=s(n),e=function(n){void 0==n&&(n={});for(let e in r.DEFAULT_ROOM_MATERIALS)n.hasOwnProperty(e)||(n[e]=r.ROOM_MATERIAL_COEFFICIENTS[r.DEFAULT_ROOM_MATERIALS[e]]);return n}(e),void 0==t&&(t=r.DEFAULT_SPEED_OF_SOUND);let i=r.TWENTY_FOUR_LOG10/t,o=n.width*n.height*n.depth;if(o<r.ROOM_MIN_VOLUME)return A;let a=n.width*n.height,c=n.width*n.depth,h=n.depth*n.height,u=2*(a+c+h);for(let s=0;s<r.NUMBER_REVERB_FREQUENCY_BANDS;s++){let n=((e.left[s]+e.right[s])*a+(e.down[s]+e.up[s])*c+(e.front[s]+e.back[s])*h)/u;A[s]=r.ROOM_EYRING_CORRECTION_COEFFICIENT*i*o/(-u*Math.log(1-n)+4*r.ROOM_AIR_ABSORPTION_COEFFICIENTS[s]*o)}return A}function c(n){let e=[];for(let t in r.DEFAULT_REFLECTION_COEFFICIENTS)if(r.DEFAULT_REFLECTION_COEFFICIENTS.hasOwnProperty(t)){e[t]=0;for(let A=0;A<r.NUMBER_REFLECTION_AVERAGING_BANDS;A++){let i=A+r.ROOM_STARTING_AVERAGING_BAND;e[t]+=n[t][i]}e[t]/=r.NUMBER_REFLECTION_AVERAGING_BANDS,e[t]=Math.sqrt(1-e[t])}return e}function h(n,e){void 0==e&&(e={}),void 0==e.listenerPosition&&(e.listenerPosition=r.DEFAULT_POSITION.slice()),void 0==e.dimensions&&(e.dimensions={},Object.assign(e.dimensions,r.DEFAULT_ROOM_DIMENSIONS)),void 0==e.materials&&(e.materials={},Object.assign(e.materials,r.DEFAULT_ROOM_MATERIALS)),void 0==e.speedOfSound&&(e.speedOfSound=r.DEFAULT_SPEED_OF_SOUND),e.dimensions=s(e.dimensions);let t=o(e.materials),h=c(t),u=a(e.dimensions,t,e.speedOfSound);this.early=new i(n,{dimensions:e.dimensions,coefficients:h,speedOfSound:e.speedOfSound,listenerPosition:e.listenerPosition}),this.late=new A(n,{durations:u}),this.speedOfSound=e.speedOfSound,this.output=n.createGain(),this.early.output.connect(this.output),this._merger=n.createChannelMerger(4),this.late.output.connect(this._merger,0,0),this._merger.connect(this.output)}h.prototype.setProperties=function(n,e){let t=o(e),A=a(n,t,this.speedOfSound);this.late.setDurations(A),this.early.speedOfSound=this.speedOfSound;let i=c(t);this.early.setRoomProperties(n,i)},h.prototype.setListenerPosition=function(n,e,t){this.early.speedOfSound=this.speedOfSound,this.early.setListenerPosition(n,e,t);let A=this.getDistanceOutsideRoom(n,e,t),i=1;A>r.EPSILON_FLOAT&&(i=1-A/r.LISTENER_MAX_OUTSIDE_ROOM_DISTANCE,i=Math.max(0,Math.min(1,i))),this.output.gain.value=i},h.prototype.getDistanceOutsideRoom=function(n,e,t){let A=Math.max(0,-this.early._halfDimensions.width-n,n-this.early._halfDimensions.width),i=Math.max(0,-this.early._halfDimensions.height-e,e-this.early._halfDimensions.height),r=Math.max(0,-this.early._halfDimensions.depth-t,t-this.early._halfDimensions.depth);return Math.sqrt(A*A+i*i+r*r)},n.exports=h},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(0);function i(n,e){void 0==e&&(e={}),void 0==e.durations&&(e.durations=A.DEFAULT_REVERB_DURATIONS.slice()),void 0==e.predelay&&(e.predelay=A.DEFAULT_REVERB_PREDELAY),void 0==e.gain&&(e.gain=A.DEFAULT_REVERB_GAIN),void 0==e.bandwidth&&(e.bandwidth=A.DEFAULT_REVERB_BANDWIDTH),void 0==e.tailonset&&(e.tailonset=A.DEFAULT_REVERB_TAIL_ONSET);let t=e.predelay/1e3;this._bandwidthCoeff=e.bandwidth*A.LOG2_DIV2,this._tailonsetSamples=e.tailonset/1e3,this._context=n,this.input=n.createGain(),this._predelay=n.createDelay(t),this._convolver=n.createConvolver(),this.output=n.createGain(),this.output.gain.value=e.gain,this._convolver.normalize=!1,this.input.connect(this._predelay),this._predelay.connect(this._convolver),this._convolver.connect(this.output),this.setDurations(e.durations)}i.prototype.setDurations=function(n){if(n.length!==A.NUMBER_REVERB_FREQUENCY_BANDS)return void A.log("Warning: invalid number of RT60 values provided to reverb.");let e=new Float32Array(A.NUMBER_REVERB_FREQUENCY_BANDS),t=this._context.sampleRate;for(let c=0;c<n.length;c++)n[c]=Math.max(0,Math.min(A.DEFAULT_REVERB_MAX_DURATION,n[c])),e[c]=Math.round(n[c]*t*A.DEFAULT_REVERB_DURATION_MULTIPLIER);let i=0;for(let A=0;A<e.length;A++)e[A]>i&&(i=e[A]);i<1&&(i=1);let r=this._context.createBuffer(1,i,t),o=r.getChannelData(0),s=new Float32Array(i);for(let A=0;A<i;A++)s[A]=2*Math.random()-1;for(let c=0;c<A.NUMBER_REVERB_FREQUENCY_BANDS;c++){let n=-A.LOG1000/e[c],i=A.TWO_PI*A.DEFAULT_REVERB_FREQUENCY_BANDS[c]/t,r=Math.sin(i),a=r*Math.sinh(this._bandwidthCoeff*i/r),h=1/(1+a),u=a*h,l=-2*Math.cos(i)*h,f=(1-a)*h,d=0,m=0;for(let t=0;t<e[c];t++){let e=s[t]*Math.exp(n*t)-l*d-f*m;o[t]+=u*(e-m),m=d,d=e}}let a=Math.round(this._tailonsetSamples);for(let c=0;c<Math.min(o.length,a);c++){let n=.5*(1-Math.cos(A.TWO_PI*c/(2*a-1)));o[c]*=n}this._convolver.buffer=r},n.exports=i},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(0);function i(n,e){void 0==e&&(e={}),void 0==e.speedOfSound&&(e.speedOfSound=A.DEFAULT_SPEED_OF_SOUND),void 0==e.listenerPosition&&(e.listenerPosition=A.DEFAULT_POSITION.slice()),void 0==e.coefficients&&(e.coefficients={},Object.assign(e.coefficients,A.DEFAULT_REFLECTION_COEFFICIENTS)),this.speedOfSound=e.speedOfSound,this.input=n.createGain(),this.output=n.createGain(),this._lowpass=n.createBiquadFilter(),this._delays={},this._gains={},this._inverters={},this._merger=n.createChannelMerger(4);for(let t in A.DEFAULT_REFLECTION_COEFFICIENTS)A.DEFAULT_REFLECTION_COEFFICIENTS.hasOwnProperty(t)&&(this._delays[t]=n.createDelay(A.MAX_DURATION),this._gains[t]=n.createGain());this._inverters.right=n.createGain(),this._inverters.down=n.createGain(),this._inverters.back=n.createGain(),this._lowpass.type="lowpass",this._lowpass.frequency.value=A.DEFAULT_REFLECTION_CUTOFF_FREQUENCY,this._lowpass.Q.value=0;for(let t in A.DEFAULT_REFLECTION_COEFFICIENTS)A.DEFAULT_REFLECTION_COEFFICIENTS.hasOwnProperty(t)&&(this._delays[t].delayTime.value=0,this._gains[t].gain.value=0);this._inverters.right.gain.value=-1,this._inverters.down.gain.value=-1,this._inverters.back.gain.value=-1,this.input.connect(this._lowpass);for(let t in A.DEFAULT_REFLECTION_COEFFICIENTS)A.DEFAULT_REFLECTION_COEFFICIENTS.hasOwnProperty(t)&&(this._lowpass.connect(this._delays[t]),this._delays[t].connect(this._gains[t]),this._gains[t].connect(this._merger,0,0));this._gains.left.connect(this._merger,0,1),this._gains.right.connect(this._inverters.right),this._inverters.right.connect(this._merger,0,1),this._gains.up.connect(this._merger,0,2),this._gains.down.connect(this._inverters.down),this._inverters.down.connect(this._merger,0,2),this._gains.front.connect(this._merger,0,3),this._gains.back.connect(this._inverters.back),this._inverters.back.connect(this._merger,0,3),this._merger.connect(this.output),this._listenerPosition=e.listenerPosition,this.setRoomProperties(e.dimensions,e.coefficients)}i.prototype.setListenerPosition=function(n,e,t){this._listenerPosition=[n,e,t];let i={left:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.width+n)+A.DEFAULT_REFLECTION_MIN_DISTANCE,right:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.width-n)+A.DEFAULT_REFLECTION_MIN_DISTANCE,front:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.depth+t)+A.DEFAULT_REFLECTION_MIN_DISTANCE,back:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.depth-t)+A.DEFAULT_REFLECTION_MIN_DISTANCE,down:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.height+e)+A.DEFAULT_REFLECTION_MIN_DISTANCE,up:A.DEFAULT_REFLECTION_MULTIPLIER*Math.max(0,this._halfDimensions.height-e)+A.DEFAULT_REFLECTION_MIN_DISTANCE};for(let r in A.DEFAULT_REFLECTION_COEFFICIENTS)if(A.DEFAULT_REFLECTION_COEFFICIENTS.hasOwnProperty(r)){let n=i[r]/this.speedOfSound;this._delays[r].delayTime.value=n;let e=this._coefficients[r]/i[r];this._gains[r].gain.value=e}},i.prototype.setRoomProperties=function(n,e){void 0==n&&(n={},Object.assign(n,A.DEFAULT_ROOM_DIMENSIONS)),void 0==e&&(e={},Object.assign(e,A.DEFAULT_REFLECTION_COEFFICIENTS)),this._coefficients=e,this._halfDimensions={},this._halfDimensions.width=.5*n.width,this._halfDimensions.height=.5*n.height,this._halfDimensions.depth=.5*n.depth,this.setListenerPosition(this._listenerPosition[0],this._listenerPosition[1],this._listenerPosition[2])},n.exports=i},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */e.ResonanceAudio=t(11),e.ResonanceAudio.Attenuation=t(6),e.ResonanceAudio.Directivity=t(5),e.ResonanceAudio.EarlyReflections=t(9),e.ResonanceAudio.Encoder=t(1),e.ResonanceAudio.LateReflections=t(8),e.ResonanceAudio.Listener=t(2),e.ResonanceAudio.Room=t(7),e.ResonanceAudio.Source=t(4),e.ResonanceAudio.Tables=t(3),e.ResonanceAudio.Utils=t(0),e.ResonanceAudio.Version=t(13)},function(n,e,t){"use strict";
/**
 * @license
 * Copyright 2017 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */const A=t(2),i=t(4),r=t(7),o=t(1),s=t(0);function a(n,e){void 0==e&&(e={}),void 0==e.ambisonicOrder&&(e.ambisonicOrder=s.DEFAULT_AMBISONIC_ORDER),void 0==e.listenerPosition&&(e.listenerPosition=s.DEFAULT_POSITION.slice()),void 0==e.listenerForward&&(e.listenerForward=s.DEFAULT_FORWARD.slice()),void 0==e.listenerUp&&(e.listenerUp=s.DEFAULT_UP.slice()),void 0==e.dimensions&&(e.dimensions={},Object.assign(e.dimensions,s.DEFAULT_ROOM_DIMENSIONS)),void 0==e.materials&&(e.materials={},Object.assign(e.materials,s.DEFAULT_ROOM_MATERIALS)),void 0==e.speedOfSound&&(e.speedOfSound=s.DEFAULT_SPEED_OF_SOUND),this._ambisonicOrder=o.validateAmbisonicOrder(e.ambisonicOrder),this._sources=[],this._room=new r(n,{listenerPosition:e.listenerPosition,dimensions:e.dimensions,materials:e.materials,speedOfSound:e.speedOfSound}),this._listener=new A(n,{ambisonicOrder:e.ambisonicOrder,position:e.listenerPosition,forward:e.listenerForward,up:e.listenerUp}),this._context=n,this.output=n.createGain(),this.ambisonicOutput=n.createGain(),this.ambisonicInput=this._listener.input,this._room.output.connect(this._listener.input),this._listener.output.connect(this.output),this._listener.ambisonicOutput.connect(this.ambisonicOutput)}a.prototype.createSource=function(n){let e=new i(this,n);return this._sources[this._sources.length]=e,e},a.prototype.setAmbisonicOrder=function(n){this._ambisonicOrder=o.validateAmbisonicOrder(n)},a.prototype.setRoomProperties=function(n,e){this._room.setProperties(n,e)},a.prototype.setListenerPosition=function(n,e,t){this._listener.position[0]=n,this._listener.position[1]=e,this._listener.position[2]=t,this._room.setListenerPosition(n,e,t),this._sources.forEach(function(n){n._update()})},a.prototype.setListenerOrientation=function(n,e,t,A,i,r){this._listener.setOrientation(n,e,t,A,i,r)},a.prototype.setListenerFromMatrix=function(n){this._listener.setFromMatrix(n),this.setListenerPosition(this._listener.position[0],this._listener.position[1],this._listener.position[2])},a.prototype.setSpeedOfSound=function(n){this._room.speedOfSound=n},n.exports=a},function(module,exports,__webpack_require__){
/**
 * @license
 * Copyright 2016 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var A;window,A=function(){return function(n){var e={};function t(A){if(e[A])return e[A].exports;var i=e[A]={i:A,l:!1,exports:{}};return n[A].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=n,t.c=e,t.d=function(n,e,A){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:A})},t.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s="./src/main.js")}({"./src/buffer-list.js":function(module,exports,__webpack_require__){"use strict";eval("/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Streamlined AudioBuffer loader.\n */\n\n\n\n\nconst Utils = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\n/**\n * @typedef {string} BufferDataType\n */\n\n/**\n * Buffer data type for ENUM.\n * @enum {BufferDataType}\n */\nconst BufferDataType = {\n  /** @type {string} The data contains Base64-encoded string.. */\n  BASE64: 'base64',\n  /** @type {string} The data is a URL for audio file. */\n  URL: 'url',\n};\n\n\n/**\n * BufferList object mananges the async loading/decoding of multiple\n * AudioBuffers from multiple URLs.\n * @constructor\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {string[]} bufferData - An ordered list of URLs.\n * @param {Object} options - Options\n * @param {string} [options.dataType='base64'] - BufferDataType specifier.\n * @param {Boolean} [options.verbose=false] - Log verbosity. |true| prints the\n * individual message from each URL and AudioBuffer.\n */\nfunction BufferList(context, bufferData, options) {\n  this._context = Utils.isAudioContext(context) ?\n      context :\n      Utils.throw('BufferList: Invalid BaseAudioContext.');\n\n  this._options = {\n    dataType: BufferDataType.BASE64,\n    verbose: false,\n  };\n\n  if (options) {\n    if (options.dataType &&\n        Utils.isDefinedENUMEntry(BufferDataType, options.dataType)) {\n      this._options.dataType = options.dataType;\n    }\n    if (options.verbose) {\n      this._options.verbose = Boolean(options.verbose);\n    }\n  }\n\n  this._bufferList = [];\n  this._bufferData = this._options.dataType === BufferDataType.BASE64\n      ? bufferData\n      : bufferData.slice(0);\n  this._numberOfTasks = this._bufferData.length;\n\n  this._resolveHandler = null;\n  this._rejectHandler = new Function();\n}\n\n\n/**\n * Starts AudioBuffer loading tasks.\n * @return {Promise<AudioBuffer[]>} The promise resolves with an array of\n * AudioBuffer.\n */\nBufferList.prototype.load = function() {\n  return new Promise(this._promiseGenerator.bind(this));\n};\n\n\n/**\n * Promise argument generator. Internally starts multiple async loading tasks.\n * @private\n * @param {function} resolve Promise resolver.\n * @param {function} reject Promise reject.\n */\nBufferList.prototype._promiseGenerator = function(resolve, reject) {\n  if (typeof resolve !== 'function') {\n    Utils.throw('BufferList: Invalid Promise resolver.');\n  } else {\n    this._resolveHandler = resolve;\n  }\n\n  if (typeof reject === 'function') {\n    this._rejectHandler = reject;\n  }\n\n  for (let i = 0; i < this._bufferData.length; ++i) {\n    this._options.dataType === BufferDataType.BASE64\n        ? this._launchAsyncLoadTask(i)\n        : this._launchAsyncLoadTaskXHR(i);\n  }\n};\n\n\n/**\n * Run async loading task for Base64-encoded string.\n * @private\n * @param {Number} taskId Task ID number from the ordered list |bufferData|.\n */\nBufferList.prototype._launchAsyncLoadTask = function(taskId) {\n  const that = this;\n  this._context.decodeAudioData(\n      Utils.getArrayBufferFromBase64String(this._bufferData[taskId]),\n      function(audioBuffer) {\n        that._updateProgress(taskId, audioBuffer);\n      },\n      function(errorMessage) {\n        that._updateProgress(taskId, null);\n        const message = 'BufferList: decoding ArrayByffer(\"' + taskId +\n            '\" from Base64-encoded data failed. (' + errorMessage + ')';\n        that._rejectHandler(message);\n        Utils.throw(message);\n      });\n};\n\n\n/**\n * Run async loading task via XHR for audio file URLs.\n * @private\n * @param {Number} taskId Task ID number from the ordered list |bufferData|.\n */\nBufferList.prototype._launchAsyncLoadTaskXHR = function(taskId) {\n  const xhr = new XMLHttpRequest();\n  xhr.open('GET', this._bufferData[taskId]);\n  xhr.responseType = 'arraybuffer';\n\n  const that = this;\n  xhr.onload = function() {\n    if (xhr.status === 200) {\n      that._context.decodeAudioData(\n          xhr.response,\n          function(audioBuffer) {\n            that._updateProgress(taskId, audioBuffer);\n          },\n          function(errorMessage) {\n            that._updateProgress(taskId, null);\n            const message = 'BufferList: decoding \"' +\n                that._bufferData[taskId] + '\" failed. (' + errorMessage + ')';\n            that._rejectHandler(message);\n            Utils.log(message);\n          });\n    } else {\n      const message = 'BufferList: XHR error while loading \"' +\n          that._bufferData[taskId] + '\". (' + xhr.status + ' ' +\n          xhr.statusText + ')';\n      that._rejectHandler(message);\n      Utils.log(message);\n    }\n  };\n\n  xhr.onerror = function(event) {\n    that._updateProgress(taskId, null);\n    that._rejectHandler();\n    Utils.log(\n        'BufferList: XHR network failed on loading \"' +\n        that._bufferData[taskId] + '\".');\n  };\n\n  xhr.send();\n};\n\n\n/**\n * Updates the overall progress on loading tasks.\n * @param {Number} taskId Task ID number.\n * @param {AudioBuffer} audioBuffer Decoded AudioBuffer object.\n */\nBufferList.prototype._updateProgress = function(taskId, audioBuffer) {\n  this._bufferList[taskId] = audioBuffer;\n\n  if (this._options.verbose) {\n    let messageString = this._options.dataType === BufferDataType.BASE64\n        ? 'ArrayBuffer(' + taskId + ') from Base64-encoded HRIR'\n        : '\"' + this._bufferData[taskId] + '\"';\n    Utils.log('BufferList: ' + messageString + ' successfully loaded.');\n  }\n\n  if (--this._numberOfTasks === 0) {\n    let messageString = this._options.dataType === BufferDataType.BASE64\n        ? this._bufferData.length + ' AudioBuffers from Base64-encoded HRIRs'\n        : this._bufferData.length + ' files via XHR';\n    Utils.log('BufferList: ' + messageString + ' loaded successfully.');\n    this._resolveHandler(this._bufferList);\n  }\n};\n\n\nmodule.exports = BufferList;\n\n\n//# sourceURL=webpack:///./src/buffer-list.js?")},"./src/foa-convolver.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @file A collection of convolvers. Can be used for the optimized FOA binaural\n * rendering. (e.g. SH-MaxRe HRTFs)\n */\n\n\n\n\n/**\n * FOAConvolver. A collection of 2 stereo convolvers for 4-channel FOA stream.\n * @constructor\n * @param {BaseAudioContext} context The associated AudioContext.\n * @param {AudioBuffer[]} [hrirBufferList] - An ordered-list of stereo\n * AudioBuffers for convolution. (i.e. 2 stereo AudioBuffers for FOA)\n */\nfunction FOAConvolver(context, hrirBufferList) {\n  this._context = context;\n\n  this._active = false;\n  this._isBufferLoaded = false;\n\n  this._buildAudioGraph();\n\n  if (hrirBufferList) {\n    this.setHRIRBufferList(hrirBufferList);\n  }\n\n  this.enable();\n}\n\n\n/**\n * Build the internal audio graph.\n *\n * @private\n */\nFOAConvolver.prototype._buildAudioGraph = function() {\n  this._splitterWYZX = this._context.createChannelSplitter(4);\n  this._mergerWY = this._context.createChannelMerger(2);\n  this._mergerZX = this._context.createChannelMerger(2);\n  this._convolverWY = this._context.createConvolver();\n  this._convolverZX = this._context.createConvolver();\n  this._splitterWY = this._context.createChannelSplitter(2);\n  this._splitterZX = this._context.createChannelSplitter(2);\n  this._inverter = this._context.createGain();\n  this._mergerBinaural = this._context.createChannelMerger(2);\n  this._summingBus = this._context.createGain();\n\n  // Group W and Y, then Z and X.\n  this._splitterWYZX.connect(this._mergerWY, 0, 0);\n  this._splitterWYZX.connect(this._mergerWY, 1, 1);\n  this._splitterWYZX.connect(this._mergerZX, 2, 0);\n  this._splitterWYZX.connect(this._mergerZX, 3, 1);\n\n  // Create a network of convolvers using splitter/merger.\n  this._mergerWY.connect(this._convolverWY);\n  this._mergerZX.connect(this._convolverZX);\n  this._convolverWY.connect(this._splitterWY);\n  this._convolverZX.connect(this._splitterZX);\n  this._splitterWY.connect(this._mergerBinaural, 0, 0);\n  this._splitterWY.connect(this._mergerBinaural, 0, 1);\n  this._splitterWY.connect(this._mergerBinaural, 1, 0);\n  this._splitterWY.connect(this._inverter, 1, 0);\n  this._inverter.connect(this._mergerBinaural, 0, 1);\n  this._splitterZX.connect(this._mergerBinaural, 0, 0);\n  this._splitterZX.connect(this._mergerBinaural, 0, 1);\n  this._splitterZX.connect(this._mergerBinaural, 1, 0);\n  this._splitterZX.connect(this._mergerBinaural, 1, 1);\n\n  // By default, WebAudio\'s convolver does the normalization based on IR\'s\n  // energy. For the precise convolution, it must be disabled before the buffer\n  // assignment.\n  this._convolverWY.normalize = false;\n  this._convolverZX.normalize = false;\n\n  // For asymmetric degree.\n  this._inverter.gain.value = -1;\n\n  // Input/output proxy.\n  this.input = this._splitterWYZX;\n  this.output = this._summingBus;\n};\n\n\n/**\n * Assigns 2 HRIR AudioBuffers to 2 convolvers: Note that we use 2 stereo\n * convolutions for 4-channel direct convolution. Using mono convolver or\n * 4-channel convolver is not viable because mono convolution wastefully\n * produces the stereo outputs, and the 4-ch convolver does cross-channel\n * convolution. (See Web Audio API spec)\n * @param {AudioBuffer[]} hrirBufferList - An array of stereo AudioBuffers for\n * convolvers.\n */\nFOAConvolver.prototype.setHRIRBufferList = function(hrirBufferList) {\n  // After these assignments, the channel data in the buffer is immutable in\n  // FireFox. (i.e. neutered) So we should avoid re-assigning buffers, otherwise\n  // an exception will be thrown.\n  if (this._isBufferLoaded) {\n    return;\n  }\n\n  this._convolverWY.buffer = hrirBufferList[0];\n  this._convolverZX.buffer = hrirBufferList[1];\n  this._isBufferLoaded = true;\n};\n\n\n/**\n * Enable FOAConvolver instance. The audio graph will be activated and pulled by\n * the WebAudio engine. (i.e. consume CPU cycle)\n */\nFOAConvolver.prototype.enable = function() {\n  this._mergerBinaural.connect(this._summingBus);\n  this._active = true;\n};\n\n\n/**\n * Disable FOAConvolver instance. The inner graph will be disconnected from the\n * audio destination, thus no CPU cycle will be consumed.\n */\nFOAConvolver.prototype.disable = function() {\n  this._mergerBinaural.disconnect();\n  this._active = false;\n};\n\n\nmodule.exports = FOAConvolver;\n\n\n//# sourceURL=webpack:///./src/foa-convolver.js?')},"./src/foa-renderer.js":function(module,exports,__webpack_require__){"use strict";eval("/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @file Omnitone FOARenderer. This is user-facing API for the first-order\n * ambisonic decoder and the optimized binaural renderer.\n */\n\n\n\nconst BufferList = __webpack_require__(/*! ./buffer-list.js */ \"./src/buffer-list.js\");\nconst FOAConvolver = __webpack_require__(/*! ./foa-convolver.js */ \"./src/foa-convolver.js\");\nconst FOAHrirBase64 = __webpack_require__(/*! ./resources/omnitone-foa-hrir-base64.js */ \"./src/resources/omnitone-foa-hrir-base64.js\");\nconst FOARotator = __webpack_require__(/*! ./foa-rotator.js */ \"./src/foa-rotator.js\");\nconst FOARouter = __webpack_require__(/*! ./foa-router.js */ \"./src/foa-router.js\");\nconst Utils = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\n\n/**\n * @typedef {string} RenderingMode\n */\n\n/**\n * Rendering mode ENUM.\n * @enum {RenderingMode}\n */\nconst RenderingMode = {\n  /** @type {string} Use ambisonic rendering. */\n  AMBISONIC: 'ambisonic',\n  /** @type {string} Bypass. No ambisonic rendering. */\n  BYPASS: 'bypass',\n  /** @type {string} Disable audio output. */\n  OFF: 'off',\n};\n\n\n/**\n * Omnitone FOA renderer class. Uses the optimized convolution technique.\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Object} config\n * @param {Array} [config.channelMap] - Custom channel routing map. Useful for\n * handling the inconsistency in browser's multichannel audio decoding.\n * @param {Array} [config.hrirPathList] - A list of paths to HRIR files. It\n * overrides the internal HRIR list if given.\n * @param {RenderingMode} [config.renderingMode='ambisonic'] - Rendering mode.\n */\nfunction FOARenderer(context, config) {\n  this._context = Utils.isAudioContext(context) ?\n      context :\n      Utils.throw('FOARenderer: Invalid BaseAudioContext.');\n\n  this._config = {\n    channelMap: FOARouter.ChannelMap.DEFAULT,\n    renderingMode: RenderingMode.AMBISONIC,\n  };\n\n  if (config) {\n    if (config.channelMap) {\n      if (Array.isArray(config.channelMap) && config.channelMap.length === 4) {\n        this._config.channelMap = config.channelMap;\n      } else {\n        Utils.throw(\n            'FOARenderer: Invalid channel map. (got ' + config.channelMap\n            + ')');\n      }\n    }\n\n    if (config.hrirPathList) {\n      if (Array.isArray(config.hrirPathList) &&\n          config.hrirPathList.length === 2) {\n        this._config.pathList = config.hrirPathList;\n      } else {\n        Utils.throw(\n            'FOARenderer: Invalid HRIR URLs. It must be an array with ' +\n            '2 URLs to HRIR files. (got ' + config.hrirPathList + ')');\n      }\n    }\n\n    if (config.renderingMode) {\n      if (Object.values(RenderingMode).includes(config.renderingMode)) {\n        this._config.renderingMode = config.renderingMode;\n      } else {\n        Utils.log(\n            'FOARenderer: Invalid rendering mode order. (got' +\n            config.renderingMode + ') Fallbacks to the mode \"ambisonic\".');\n      }\n    }\n  }\n\n  this._buildAudioGraph();\n\n  this._tempMatrix4 = new Float32Array(16);\n  this._isRendererReady = false;\n}\n\n\n/**\n * Builds the internal audio graph.\n * @private\n */\nFOARenderer.prototype._buildAudioGraph = function() {\n  this.input = this._context.createGain();\n  this.output = this._context.createGain();\n  this._bypass = this._context.createGain();\n  this._foaRouter = new FOARouter(this._context, this._config.channelMap);\n  this._foaRotator = new FOARotator(this._context);\n  this._foaConvolver = new FOAConvolver(this._context);\n  this.input.connect(this._foaRouter.input);\n  this.input.connect(this._bypass);\n  this._foaRouter.output.connect(this._foaRotator.input);\n  this._foaRotator.output.connect(this._foaConvolver.input);\n  this._foaConvolver.output.connect(this.output);\n\n  this.input.channelCount = 4;\n  this.input.channelCountMode = 'explicit';\n  this.input.channelInterpretation = 'discrete';\n};\n\n\n/**\n * Internal callback handler for |initialize| method.\n * @private\n * @param {function} resolve - Resolution handler.\n * @param {function} reject - Rejection handler.\n */\nFOARenderer.prototype._initializeCallback = function(resolve, reject) {\n  const bufferList = this._config.pathList\n      ? new BufferList(this._context, this._config.pathList, {dataType: 'url'})\n      : new BufferList(this._context, FOAHrirBase64);\n  bufferList.load().then(\n      function(hrirBufferList) {\n        this._foaConvolver.setHRIRBufferList(hrirBufferList);\n        this.setRenderingMode(this._config.renderingMode);\n        this._isRendererReady = true;\n        Utils.log('FOARenderer: HRIRs loaded successfully. Ready.');\n        resolve();\n      }.bind(this),\n      function() {\n        const errorMessage = 'FOARenderer: HRIR loading/decoding failed.';\n        reject(errorMessage);\n        Utils.throw(errorMessage);\n      });\n};\n\n\n/**\n * Initializes and loads the resource for the renderer.\n * @return {Promise}\n */\nFOARenderer.prototype.initialize = function() {\n  Utils.log(\n      'FOARenderer: Initializing... (mode: ' + this._config.renderingMode +\n      ')');\n\n  return new Promise(this._initializeCallback.bind(this));\n};\n\n\n/**\n * Set the channel map.\n * @param {Number[]} channelMap - Custom channel routing for FOA stream.\n */\nFOARenderer.prototype.setChannelMap = function(channelMap) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  if (channelMap.toString() !== this._config.channelMap.toString()) {\n    Utils.log(\n        'Remapping channels ([' + this._config.channelMap.toString() +\n        '] -> [' + channelMap.toString() + ']).');\n    this._config.channelMap = channelMap.slice();\n    this._foaRouter.setChannelMap(this._config.channelMap);\n  }\n};\n\n\n/**\n * Updates the rotation matrix with 3x3 matrix.\n * @param {Number[]} rotationMatrix3 - A 3x3 rotation matrix. (column-major)\n */\nFOARenderer.prototype.setRotationMatrix3 = function(rotationMatrix3) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  this._foaRotator.setRotationMatrix3(rotationMatrix3);\n};\n\n\n/**\n * Updates the rotation matrix with 4x4 matrix.\n * @param {Number[]} rotationMatrix4 - A 4x4 rotation matrix. (column-major)\n */\nFOARenderer.prototype.setRotationMatrix4 = function(rotationMatrix4) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  this._foaRotator.setRotationMatrix4(rotationMatrix4);\n};\n\n\n/**\n * Set the rotation matrix from a Three.js camera object. Depreated in V1, and\n * this exists only for the backward compatiblity. Instead, use\n * |setRotatationMatrix4()| with Three.js |camera.worldMatrix.elements|.\n * @deprecated\n * @param {Object} cameraMatrix - Matrix4 from Three.js |camera.matrix|.\n */\nFOARenderer.prototype.setRotationMatrixFromCamera = function(cameraMatrix) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  // Extract the inner array elements and inverse. (The actual view rotation is\n  // the opposite of the camera movement.)\n  Utils.invertMatrix4(this._tempMatrix4, cameraMatrix.elements);\n  this._foaRotator.setRotationMatrix4(this._tempMatrix4);\n};\n\n\n/**\n * Set the rendering mode.\n * @param {RenderingMode} mode - Rendering mode.\n *  - 'ambisonic': activates the ambisonic decoding/binaurl rendering.\n *  - 'bypass': bypasses the input stream directly to the output. No ambisonic\n *    decoding or encoding.\n *  - 'off': all the processing off saving the CPU power.\n */\nFOARenderer.prototype.setRenderingMode = function(mode) {\n  if (mode === this._config.renderingMode) {\n    return;\n  }\n\n  switch (mode) {\n    case RenderingMode.AMBISONIC:\n      this._foaConvolver.enable();\n      this._bypass.disconnect();\n      break;\n    case RenderingMode.BYPASS:\n      this._foaConvolver.disable();\n      this._bypass.connect(this.output);\n      break;\n    case RenderingMode.OFF:\n      this._foaConvolver.disable();\n      this._bypass.disconnect();\n      break;\n    default:\n      Utils.log(\n          'FOARenderer: Rendering mode \"' + mode + '\" is not ' +\n          'supported.');\n      return;\n  }\n\n  this._config.renderingMode = mode;\n  Utils.log('FOARenderer: Rendering mode changed. (' + mode + ')');\n};\n\n\nmodule.exports = FOARenderer;\n\n\n//# sourceURL=webpack:///./src/foa-renderer.js?")},"./src/foa-rotator.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Sound field rotator for first-order-ambisonics decoding.\n */\n\n\n\n\n/**\n * First-order-ambisonic decoder based on gain node network.\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n */\nfunction FOARotator(context) {\n  this._context = context;\n\n  this._splitter = this._context.createChannelSplitter(4);\n  this._inY = this._context.createGain();\n  this._inZ = this._context.createGain();\n  this._inX = this._context.createGain();\n  this._m0 = this._context.createGain();\n  this._m1 = this._context.createGain();\n  this._m2 = this._context.createGain();\n  this._m3 = this._context.createGain();\n  this._m4 = this._context.createGain();\n  this._m5 = this._context.createGain();\n  this._m6 = this._context.createGain();\n  this._m7 = this._context.createGain();\n  this._m8 = this._context.createGain();\n  this._outY = this._context.createGain();\n  this._outZ = this._context.createGain();\n  this._outX = this._context.createGain();\n  this._merger = this._context.createChannelMerger(4);\n\n  // ACN channel ordering: [1, 2, 3] => [-Y, Z, -X]\n  // Y (from channel 1)\n  this._splitter.connect(this._inY, 1);\n  // Z (from channel 2)\n  this._splitter.connect(this._inZ, 2);\n  // X (from channel 3)\n  this._splitter.connect(this._inX, 3);\n  this._inY.gain.value = -1;\n  this._inX.gain.value = -1;\n\n  // Apply the rotation in the world space.\n  // |Y|   | m0  m3  m6 |   | Y * m0 + Z * m3 + X * m6 |   | Yr |\n  // |Z| * | m1  m4  m7 | = | Y * m1 + Z * m4 + X * m7 | = | Zr |\n  // |X|   | m2  m5  m8 |   | Y * m2 + Z * m5 + X * m8 |   | Xr |\n  this._inY.connect(this._m0);\n  this._inY.connect(this._m1);\n  this._inY.connect(this._m2);\n  this._inZ.connect(this._m3);\n  this._inZ.connect(this._m4);\n  this._inZ.connect(this._m5);\n  this._inX.connect(this._m6);\n  this._inX.connect(this._m7);\n  this._inX.connect(this._m8);\n  this._m0.connect(this._outY);\n  this._m1.connect(this._outZ);\n  this._m2.connect(this._outX);\n  this._m3.connect(this._outY);\n  this._m4.connect(this._outZ);\n  this._m5.connect(this._outX);\n  this._m6.connect(this._outY);\n  this._m7.connect(this._outZ);\n  this._m8.connect(this._outX);\n\n  // Transform 3: world space to audio space.\n  // W -> W (to channel 0)\n  this._splitter.connect(this._merger, 0, 0);\n  // Y (to channel 1)\n  this._outY.connect(this._merger, 0, 1);\n  // Z (to channel 2)\n  this._outZ.connect(this._merger, 0, 2);\n  // X (to channel 3)\n  this._outX.connect(this._merger, 0, 3);\n  this._outY.gain.value = -1;\n  this._outX.gain.value = -1;\n\n  this.setRotationMatrix3(new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]));\n\n  // input/output proxy.\n  this.input = this._splitter;\n  this.output = this._merger;\n}\n\n\n/**\n * Updates the rotation matrix with 3x3 matrix.\n * @param {Number[]} rotationMatrix3 - A 3x3 rotation matrix. (column-major)\n */\nFOARotator.prototype.setRotationMatrix3 = function(rotationMatrix3) {\n  this._m0.gain.value = rotationMatrix3[0];\n  this._m1.gain.value = rotationMatrix3[1];\n  this._m2.gain.value = rotationMatrix3[2];\n  this._m3.gain.value = rotationMatrix3[3];\n  this._m4.gain.value = rotationMatrix3[4];\n  this._m5.gain.value = rotationMatrix3[5];\n  this._m6.gain.value = rotationMatrix3[6];\n  this._m7.gain.value = rotationMatrix3[7];\n  this._m8.gain.value = rotationMatrix3[8];\n};\n\n\n/**\n * Updates the rotation matrix with 4x4 matrix.\n * @param {Number[]} rotationMatrix4 - A 4x4 rotation matrix. (column-major)\n */\nFOARotator.prototype.setRotationMatrix4 = function(rotationMatrix4) {\n  this._m0.gain.value = rotationMatrix4[0];\n  this._m1.gain.value = rotationMatrix4[1];\n  this._m2.gain.value = rotationMatrix4[2];\n  this._m3.gain.value = rotationMatrix4[4];\n  this._m4.gain.value = rotationMatrix4[5];\n  this._m5.gain.value = rotationMatrix4[6];\n  this._m6.gain.value = rotationMatrix4[8];\n  this._m7.gain.value = rotationMatrix4[9];\n  this._m8.gain.value = rotationMatrix4[10];\n};\n\n\n/**\n * Returns the current 3x3 rotation matrix.\n * @return {Number[]} - A 3x3 rotation matrix. (column-major)\n */\nFOARotator.prototype.getRotationMatrix3 = function() {\n  return [\n    this._m0.gain.value, this._m1.gain.value, this._m2.gain.value,\n    this._m3.gain.value, this._m4.gain.value, this._m5.gain.value,\n    this._m6.gain.value, this._m7.gain.value, this._m8.gain.value,\n  ];\n};\n\n\n/**\n * Returns the current 4x4 rotation matrix.\n * @return {Number[]} - A 4x4 rotation matrix. (column-major)\n */\nFOARotator.prototype.getRotationMatrix4 = function() {\n  let rotationMatrix4 = new Float32Array(16);\n  rotationMatrix4[0] = this._m0.gain.value;\n  rotationMatrix4[1] = this._m1.gain.value;\n  rotationMatrix4[2] = this._m2.gain.value;\n  rotationMatrix4[4] = this._m3.gain.value;\n  rotationMatrix4[5] = this._m4.gain.value;\n  rotationMatrix4[6] = this._m5.gain.value;\n  rotationMatrix4[8] = this._m6.gain.value;\n  rotationMatrix4[9] = this._m7.gain.value;\n  rotationMatrix4[10] = this._m8.gain.value;\n  return rotationMatrix4;\n};\n\n\nmodule.exports = FOARotator;\n\n\n//# sourceURL=webpack:///./src/foa-rotator.js?')},"./src/foa-router.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file An audio channel router to resolve different channel layouts between\n * browsers.\n */\n\n\n\n\n/**\n * @typedef {Number[]} ChannelMap\n */\n\n/**\n * Channel map dictionary ENUM.\n * @enum {ChannelMap}\n */\nconst ChannelMap = {\n  /** @type {Number[]} - ACN channel map for Chrome and FireFox. (FFMPEG) */\n  DEFAULT: [0, 1, 2, 3],\n  /** @type {Number[]} - Safari\'s 4-channel map for AAC codec. */\n  SAFARI: [2, 0, 1, 3],\n  /** @type {Number[]} - ACN > FuMa conversion map. */\n  FUMA: [0, 3, 1, 2],\n};\n\n\n/**\n * Channel router for FOA stream.\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number[]} channelMap - Routing destination array.\n */\nfunction FOARouter(context, channelMap) {\n  this._context = context;\n\n  this._splitter = this._context.createChannelSplitter(4);\n  this._merger = this._context.createChannelMerger(4);\n\n  // input/output proxy.\n  this.input = this._splitter;\n  this.output = this._merger;\n\n  this.setChannelMap(channelMap || ChannelMap.DEFAULT);\n}\n\n\n/**\n * Sets channel map.\n * @param {Number[]} channelMap - A new channel map for FOA stream.\n */\nFOARouter.prototype.setChannelMap = function(channelMap) {\n  if (!Array.isArray(channelMap)) {\n    return;\n  }\n\n  this._channelMap = channelMap;\n  this._splitter.disconnect();\n  this._splitter.connect(this._merger, 0, this._channelMap[0]);\n  this._splitter.connect(this._merger, 1, this._channelMap[1]);\n  this._splitter.connect(this._merger, 2, this._channelMap[2]);\n  this._splitter.connect(this._merger, 3, this._channelMap[3]);\n};\n\n\n/**\n * Static channel map ENUM.\n * @static\n * @type {ChannelMap}\n */\nFOARouter.ChannelMap = ChannelMap;\n\n\nmodule.exports = FOARouter;\n\n\n//# sourceURL=webpack:///./src/foa-router.js?')},"./src/hoa-convolver.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @file A collection of convolvers. Can be used for the optimized HOA binaural\n * rendering. (e.g. SH-MaxRe HRTFs)\n */\n\n\n\n\n/**\n * A convolver network for N-channel HOA stream.\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number} ambisonicOrder - Ambisonic order. (2 or 3)\n * @param {AudioBuffer[]} [hrirBufferList] - An ordered-list of stereo\n * AudioBuffers for convolution. (SOA: 5 AudioBuffers, TOA: 8 AudioBuffers)\n */\nfunction HOAConvolver(context, ambisonicOrder, hrirBufferList) {\n  this._context = context;\n\n  this._active = false;\n  this._isBufferLoaded = false;\n\n  // The number of channels K based on the ambisonic order N where K = (N+1)^2.\n  this._ambisonicOrder = ambisonicOrder;\n  this._numberOfChannels =\n      (this._ambisonicOrder + 1) * (this._ambisonicOrder + 1);\n\n  this._buildAudioGraph();\n  if (hrirBufferList) {\n    this.setHRIRBufferList(hrirBufferList);\n  }\n\n  this.enable();\n}\n\n\n/**\n * Build the internal audio graph.\n * For TOA convolution:\n *   input -> splitter(16) -[0,1]-> merger(2) -> convolver(2) -> splitter(2)\n *                         -[2,3]-> merger(2) -> convolver(2) -> splitter(2)\n *                         -[4,5]-> ... (6 more, 8 branches total)\n * @private\n */\nHOAConvolver.prototype._buildAudioGraph = function() {\n  const numberOfStereoChannels = Math.ceil(this._numberOfChannels / 2);\n\n  this._inputSplitter =\n      this._context.createChannelSplitter(this._numberOfChannels);\n  this._stereoMergers = [];\n  this._convolvers = [];\n  this._stereoSplitters = [];\n  this._positiveIndexSphericalHarmonics = this._context.createGain();\n  this._negativeIndexSphericalHarmonics = this._context.createGain();\n  this._inverter = this._context.createGain();\n  this._binauralMerger = this._context.createChannelMerger(2);\n  this._outputGain = this._context.createGain();\n\n  for (let i = 0; i < numberOfStereoChannels; ++i) {\n    this._stereoMergers[i] = this._context.createChannelMerger(2);\n    this._convolvers[i] = this._context.createConvolver();\n    this._stereoSplitters[i] = this._context.createChannelSplitter(2);\n    this._convolvers[i].normalize = false;\n  }\n\n  for (let l = 0; l <= this._ambisonicOrder; ++l) {\n    for (let m = -l; m <= l; m++) {\n      // We compute the ACN index (k) of ambisonics channel using the degree (l)\n      // and index (m): k = l^2 + l + m\n      const acnIndex = l * l + l + m;\n      const stereoIndex = Math.floor(acnIndex / 2);\n\n      // Split channels from input into array of stereo convolvers.\n      // Then create a network of mergers that produces the stereo output.\n      this._inputSplitter.connect(\n          this._stereoMergers[stereoIndex], acnIndex, acnIndex % 2);\n      this._stereoMergers[stereoIndex].connect(this._convolvers[stereoIndex]);\n      this._convolvers[stereoIndex].connect(this._stereoSplitters[stereoIndex]);\n\n      // Positive index (m >= 0) spherical harmonics are symmetrical around the\n      // front axis, while negative index (m < 0) spherical harmonics are\n      // anti-symmetrical around the front axis. We will exploit this symmetry\n      // to reduce the number of convolutions required when rendering to a\n      // symmetrical binaural renderer.\n      if (m >= 0) {\n        this._stereoSplitters[stereoIndex].connect(\n            this._positiveIndexSphericalHarmonics, acnIndex % 2);\n      } else {\n        this._stereoSplitters[stereoIndex].connect(\n            this._negativeIndexSphericalHarmonics, acnIndex % 2);\n      }\n    }\n  }\n\n  this._positiveIndexSphericalHarmonics.connect(this._binauralMerger, 0, 0);\n  this._positiveIndexSphericalHarmonics.connect(this._binauralMerger, 0, 1);\n  this._negativeIndexSphericalHarmonics.connect(this._binauralMerger, 0, 0);\n  this._negativeIndexSphericalHarmonics.connect(this._inverter);\n  this._inverter.connect(this._binauralMerger, 0, 1);\n\n  // For asymmetric index.\n  this._inverter.gain.value = -1;\n\n  // Input/Output proxy.\n  this.input = this._inputSplitter;\n  this.output = this._outputGain;\n};\n\n\n/**\n * Assigns N HRIR AudioBuffers to N convolvers: Note that we use 2 stereo\n * convolutions for 4-channel direct convolution. Using mono convolver or\n * 4-channel convolver is not viable because mono convolution wastefully\n * produces the stereo outputs, and the 4-ch convolver does cross-channel\n * convolution. (See Web Audio API spec)\n * @param {AudioBuffer[]} hrirBufferList - An array of stereo AudioBuffers for\n * convolvers.\n */\nHOAConvolver.prototype.setHRIRBufferList = function(hrirBufferList) {\n  // After these assignments, the channel data in the buffer is immutable in\n  // FireFox. (i.e. neutered) So we should avoid re-assigning buffers, otherwise\n  // an exception will be thrown.\n  if (this._isBufferLoaded) {\n    return;\n  }\n\n  for (let i = 0; i < hrirBufferList.length; ++i) {\n    this._convolvers[i].buffer = hrirBufferList[i];\n  }\n\n  this._isBufferLoaded = true;\n};\n\n\n/**\n * Enable HOAConvolver instance. The audio graph will be activated and pulled by\n * the WebAudio engine. (i.e. consume CPU cycle)\n */\nHOAConvolver.prototype.enable = function() {\n  this._binauralMerger.connect(this._outputGain);\n  this._active = true;\n};\n\n\n/**\n * Disable HOAConvolver instance. The inner graph will be disconnected from the\n * audio destination, thus no CPU cycle will be consumed.\n */\nHOAConvolver.prototype.disable = function() {\n  this._binauralMerger.disconnect();\n  this._active = false;\n};\n\n\nmodule.exports = HOAConvolver;\n\n\n//# sourceURL=webpack:///./src/hoa-convolver.js?')},"./src/hoa-renderer.js":function(module,exports,__webpack_require__){"use strict";eval("/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @file Omnitone HOARenderer. This is user-facing API for the higher-order\n * ambisonic decoder and the optimized binaural renderer.\n */\n\n\n\nconst BufferList = __webpack_require__(/*! ./buffer-list.js */ \"./src/buffer-list.js\");\nconst HOAConvolver = __webpack_require__(/*! ./hoa-convolver.js */ \"./src/hoa-convolver.js\");\nconst HOARotator = __webpack_require__(/*! ./hoa-rotator.js */ \"./src/hoa-rotator.js\");\nconst TOAHrirBase64 = __webpack_require__(/*! ./resources/omnitone-toa-hrir-base64.js */ \"./src/resources/omnitone-toa-hrir-base64.js\");\nconst SOAHrirBase64 = __webpack_require__(/*! ./resources/omnitone-soa-hrir-base64.js */ \"./src/resources/omnitone-soa-hrir-base64.js\");\nconst Utils = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\n\n/**\n * @typedef {string} RenderingMode\n */\n\n/**\n * Rendering mode ENUM.\n * @enum {RenderingMode}\n */\nconst RenderingMode = {\n  /** @type {string} Use ambisonic rendering. */\n  AMBISONIC: 'ambisonic',\n  /** @type {string} Bypass. No ambisonic rendering. */\n  BYPASS: 'bypass',\n  /** @type {string} Disable audio output. */\n  OFF: 'off',\n};\n\n\n// Currently SOA and TOA are only supported.\nconst SupportedAmbisonicOrder = [2, 3];\n\n\n/**\n * Omnitone HOA renderer class. Uses the optimized convolution technique.\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Object} config\n * @param {Number} [config.ambisonicOrder=3] - Ambisonic order.\n * @param {Array} [config.hrirPathList] - A list of paths to HRIR files. It\n * overrides the internal HRIR list if given.\n * @param {RenderingMode} [config.renderingMode='ambisonic'] - Rendering mode.\n */\nfunction HOARenderer(context, config) {\n  this._context = Utils.isAudioContext(context) ?\n      context :\n      Utils.throw('HOARenderer: Invalid BaseAudioContext.');\n\n  this._config = {\n    ambisonicOrder: 3,\n    renderingMode: RenderingMode.AMBISONIC,\n  };\n\n  if (config && config.ambisonicOrder) {\n    if (SupportedAmbisonicOrder.includes(config.ambisonicOrder)) {\n      this._config.ambisonicOrder = config.ambisonicOrder;\n    } else {\n      Utils.log(\n          'HOARenderer: Invalid ambisonic order. (got ' +\n          config.ambisonicOrder + ') Fallbacks to 3rd-order ambisonic.');\n    }\n  }\n\n  this._config.numberOfChannels =\n      (this._config.ambisonicOrder + 1) * (this._config.ambisonicOrder + 1);\n  this._config.numberOfStereoChannels =\n      Math.ceil(this._config.numberOfChannels / 2);\n\n  if (config && config.hrirPathList) {\n    if (Array.isArray(config.hrirPathList) &&\n        config.hrirPathList.length === this._config.numberOfStereoChannels) {\n      this._config.pathList = config.hrirPathList;\n    } else {\n      Utils.throw(\n          'HOARenderer: Invalid HRIR URLs. It must be an array with ' +\n          this._config.numberOfStereoChannels + ' URLs to HRIR files.' +\n          ' (got ' + config.hrirPathList + ')');\n    }\n  }\n\n  if (config && config.renderingMode) {\n    if (Object.values(RenderingMode).includes(config.renderingMode)) {\n      this._config.renderingMode = config.renderingMode;\n    } else {\n      Utils.log(\n          'HOARenderer: Invalid rendering mode. (got ' +\n          config.renderingMode + ') Fallbacks to \"ambisonic\".');\n    }\n  }\n\n  this._buildAudioGraph();\n\n  this._isRendererReady = false;\n}\n\n\n/**\n * Builds the internal audio graph.\n * @private\n */\nHOARenderer.prototype._buildAudioGraph = function() {\n  this.input = this._context.createGain();\n  this.output = this._context.createGain();\n  this._bypass = this._context.createGain();\n  this._hoaRotator = new HOARotator(this._context, this._config.ambisonicOrder);\n  this._hoaConvolver =\n      new HOAConvolver(this._context, this._config.ambisonicOrder);\n  this.input.connect(this._hoaRotator.input);\n  this.input.connect(this._bypass);\n  this._hoaRotator.output.connect(this._hoaConvolver.input);\n  this._hoaConvolver.output.connect(this.output);\n\n  this.input.channelCount = this._config.numberOfChannels;\n  this.input.channelCountMode = 'explicit';\n  this.input.channelInterpretation = 'discrete';\n};\n\n\n/**\n * Internal callback handler for |initialize| method.\n * @private\n * @param {function} resolve - Resolution handler.\n * @param {function} reject - Rejection handler.\n */\nHOARenderer.prototype._initializeCallback = function(resolve, reject) {\n  let bufferList;\n  if (this._config.pathList) {\n    bufferList =\n        new BufferList(this._context, this._config.pathList, {dataType: 'url'});\n  } else {\n    bufferList = this._config.ambisonicOrder === 2\n        ? new BufferList(this._context, SOAHrirBase64)\n        : new BufferList(this._context, TOAHrirBase64);\n  }\n\n  bufferList.load().then(\n      function(hrirBufferList) {\n        this._hoaConvolver.setHRIRBufferList(hrirBufferList);\n        this.setRenderingMode(this._config.renderingMode);\n        this._isRendererReady = true;\n        Utils.log('HOARenderer: HRIRs loaded successfully. Ready.');\n        resolve();\n      }.bind(this),\n      function() {\n        const errorMessage = 'HOARenderer: HRIR loading/decoding failed.';\n        reject(errorMessage);\n        Utils.throw(errorMessage);\n      });\n};\n\n\n/**\n * Initializes and loads the resource for the renderer.\n * @return {Promise}\n */\nHOARenderer.prototype.initialize = function() {\n  Utils.log(\n      'HOARenderer: Initializing... (mode: ' + this._config.renderingMode +\n      ', ambisonic order: ' + this._config.ambisonicOrder + ')');\n\n  return new Promise(this._initializeCallback.bind(this));\n};\n\n\n/**\n * Updates the rotation matrix with 3x3 matrix.\n * @param {Number[]} rotationMatrix3 - A 3x3 rotation matrix. (column-major)\n */\nHOARenderer.prototype.setRotationMatrix3 = function(rotationMatrix3) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  this._hoaRotator.setRotationMatrix3(rotationMatrix3);\n};\n\n\n/**\n * Updates the rotation matrix with 4x4 matrix.\n * @param {Number[]} rotationMatrix4 - A 4x4 rotation matrix. (column-major)\n */\nHOARenderer.prototype.setRotationMatrix4 = function(rotationMatrix4) {\n  if (!this._isRendererReady) {\n    return;\n  }\n\n  this._hoaRotator.setRotationMatrix4(rotationMatrix4);\n};\n\n\n/**\n * Set the decoding mode.\n * @param {RenderingMode} mode - Decoding mode.\n *  - 'ambisonic': activates the ambisonic decoding/binaurl rendering.\n *  - 'bypass': bypasses the input stream directly to the output. No ambisonic\n *    decoding or encoding.\n *  - 'off': all the processing off saving the CPU power.\n */\nHOARenderer.prototype.setRenderingMode = function(mode) {\n  if (mode === this._config.renderingMode) {\n    return;\n  }\n\n  switch (mode) {\n    case RenderingMode.AMBISONIC:\n      this._hoaConvolver.enable();\n      this._bypass.disconnect();\n      break;\n    case RenderingMode.BYPASS:\n      this._hoaConvolver.disable();\n      this._bypass.connect(this.output);\n      break;\n    case RenderingMode.OFF:\n      this._hoaConvolver.disable();\n      this._bypass.disconnect();\n      break;\n    default:\n      Utils.log(\n          'HOARenderer: Rendering mode \"' + mode + '\" is not ' +\n          'supported.');\n      return;\n  }\n\n  this._config.renderingMode = mode;\n  Utils.log('HOARenderer: Rendering mode changed. (' + mode + ')');\n};\n\n\nmodule.exports = HOARenderer;\n\n\n//# sourceURL=webpack:///./src/hoa-renderer.js?")},"./src/hoa-rotator.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Sound field rotator for higher-order-ambisonics decoding.\n */\n\n\n\n\n/**\n * Kronecker Delta function.\n * @param {Number} i\n * @param {Number} j\n * @return {Number}\n */\nfunction getKroneckerDelta(i, j) {\n  return i === j ? 1 : 0;\n}\n\n\n/**\n * A helper function to allow us to access a matrix array in the same\n * manner, assuming it is a (2l+1)x(2l+1) matrix. [2] uses an odd convention of\n * referring to the rows and columns using centered indices, so the middle row\n * and column are (0, 0) and the upper left would have negative coordinates.\n * @param {Number[]} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} l\n * @param {Number} i\n * @param {Number} j\n * @param {Number} gainValue\n */\nfunction setCenteredElement(matrix, l, i, j, gainValue) {\n  const index = (j + l) * (2 * l + 1) + (i + l);\n  // Row-wise indexing.\n  matrix[l - 1][index].gain.value = gainValue;\n}\n\n\n/**\n * This is a helper function to allow us to access a matrix array in the same\n * manner, assuming it is a (2l+1) x (2l+1) matrix.\n * @param {Number[]} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} l\n * @param {Number} i\n * @param {Number} j\n * @return {Number}\n */\nfunction getCenteredElement(matrix, l, i, j) {\n  // Row-wise indexing.\n  const index = (j + l) * (2 * l + 1) + (i + l);\n  return matrix[l - 1][index].gain.value;\n}\n\n\n/**\n * Helper function defined in [2] that is used by the functions U, V, W.\n * This should not be called on its own, as U, V, and W (and their coefficients)\n * select the appropriate matrix elements to access arguments |a| and |b|.\n * @param {Number[]} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} i\n * @param {Number} a\n * @param {Number} b\n * @param {Number} l\n * @return {Number}\n */\nfunction getP(matrix, i, a, b, l) {\n  if (b === l) {\n    return getCenteredElement(matrix, 1, i, 1) *\n        getCenteredElement(matrix, l - 1, a, l - 1) -\n        getCenteredElement(matrix, 1, i, -1) *\n        getCenteredElement(matrix, l - 1, a, -l + 1);\n  } else if (b === -l) {\n    return getCenteredElement(matrix, 1, i, 1) *\n        getCenteredElement(matrix, l - 1, a, -l + 1) +\n        getCenteredElement(matrix, 1, i, -1) *\n        getCenteredElement(matrix, l - 1, a, l - 1);\n  } else {\n    return getCenteredElement(matrix, 1, i, 0) *\n        getCenteredElement(matrix, l - 1, a, b);\n  }\n}\n\n\n/**\n * The functions U, V, and W should only be called if the correspondingly\n * named coefficient u, v, w from the function ComputeUVWCoeff() is non-zero.\n * When the coefficient is 0, these would attempt to access matrix elements that\n * are out of bounds. The vector of rotations, |r|, must have the |l - 1|\n * previously completed band rotations. These functions are valid for |l >= 2|.\n * @param {Number[]} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} m\n * @param {Number} n\n * @param {Number} l\n * @return {Number}\n */\nfunction getU(matrix, m, n, l) {\n  // Although [1, 2] split U into three cases for m == 0, m < 0, m > 0\n  // the actual values are the same for all three cases.\n  return getP(matrix, 0, m, n, l);\n}\n\n\n/**\n * The functions U, V, and W should only be called if the correspondingly\n * named coefficient u, v, w from the function ComputeUVWCoeff() is non-zero.\n * When the coefficient is 0, these would attempt to access matrix elements that\n * are out of bounds. The vector of rotations, |r|, must have the |l - 1|\n * previously completed band rotations. These functions are valid for |l >= 2|.\n * @param {Number[]} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} m\n * @param {Number} n\n * @param {Number} l\n * @return {Number}\n */\nfunction getV(matrix, m, n, l) {\n  if (m === 0) {\n    return getP(matrix, 1, 1, n, l) + getP(matrix, -1, -1, n, l);\n  } else if (m > 0) {\n    const d = getKroneckerDelta(m, 1);\n    return getP(matrix, 1, m - 1, n, l) * Math.sqrt(1 + d) -\n        getP(matrix, -1, -m + 1, n, l) * (1 - d);\n  } else {\n    // Note there is apparent errata in [1,2,2b] dealing with this particular\n    // case. [2b] writes it should be P*(1-d)+P*(1-d)^0.5\n    // [1] writes it as P*(1+d)+P*(1-d)^0.5, but going through the math by hand,\n    // you must have it as P*(1-d)+P*(1+d)^0.5 to form a 2^.5 term, which\n    // parallels the case where m > 0.\n    const d = getKroneckerDelta(m, -1);\n    return getP(matrix, 1, m + 1, n, l) * (1 - d) +\n        getP(matrix, -1, -m - 1, n, l) * Math.sqrt(1 + d);\n  }\n}\n\n\n/**\n * The functions U, V, and W should only be called if the correspondingly\n * named coefficient u, v, w from the function ComputeUVWCoeff() is non-zero.\n * When the coefficient is 0, these would attempt to access matrix elements that\n * are out of bounds. The vector of rotations, |r|, must have the |l - 1|\n * previously completed band rotations. These functions are valid for |l >= 2|.\n * @param {Number[]} matrix N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n * @param {Number} m\n * @param {Number} n\n * @param {Number} l\n * @return {Number}\n */\nfunction getW(matrix, m, n, l) {\n  // Whenever this happens, w is also 0 so W can be anything.\n  if (m === 0) {\n    return 0;\n  }\n\n  return m > 0 ? getP(matrix, 1, m + 1, n, l) + getP(matrix, -1, -m - 1, n, l) :\n                 getP(matrix, 1, m - 1, n, l) - getP(matrix, -1, -m + 1, n, l);\n}\n\n\n/**\n * Calculates the coefficients applied to the U, V, and W functions. Because\n * their equations share many common terms they are computed simultaneously.\n * @param {Number} m\n * @param {Number} n\n * @param {Number} l\n * @return {Array} 3 coefficients for U, V and W functions.\n */\nfunction computeUVWCoeff(m, n, l) {\n  const d = getKroneckerDelta(m, 0);\n  const reciprocalDenominator =\n      Math.abs(n) === l ? 1 / (2 * l * (2 * l - 1)) : 1 / ((l + n) * (l - n));\n\n  return [\n    Math.sqrt((l + m) * (l - m) * reciprocalDenominator),\n    0.5 * (1 - 2 * d) * Math.sqrt((1 + d) *\n                                  (l + Math.abs(m) - 1) *\n                                  (l + Math.abs(m)) *\n                                  reciprocalDenominator),\n    -0.5 * (1 - d) * Math.sqrt((l - Math.abs(m) - 1) * (l - Math.abs(m))) *\n        reciprocalDenominator,\n  ];\n}\n\n\n/**\n * Calculates the (2l+1) x (2l+1) rotation matrix for the band l.\n * This uses the matrices computed for band 1 and band l-1 to compute the\n * matrix for band l. |rotations| must contain the previously computed l-1\n * rotation matrices.\n * This implementation comes from p. 5 (6346), Table 1 and 2 in [2] taking\n * into account the corrections from [2b].\n * @param {Number[]} matrix - N matrices of gainNodes, each with where\n * n=1,2,...,N.\n * @param {Number} l\n */\nfunction computeBandRotation(matrix, l) {\n  // The lth band rotation matrix has rows and columns equal to the number of\n  // coefficients within that band (-l <= m <= l implies 2l + 1 coefficients).\n  for (let m = -l; m <= l; m++) {\n    for (let n = -l; n <= l; n++) {\n      const uvwCoefficients = computeUVWCoeff(m, n, l);\n\n      // The functions U, V, W are only safe to call if the coefficients\n      // u, v, w are not zero.\n      if (Math.abs(uvwCoefficients[0]) > 0) {\n        uvwCoefficients[0] *= getU(matrix, m, n, l);\n      }\n      if (Math.abs(uvwCoefficients[1]) > 0) {\n        uvwCoefficients[1] *= getV(matrix, m, n, l);\n      }\n      if (Math.abs(uvwCoefficients[2]) > 0) {\n        uvwCoefficients[2] *= getW(matrix, m, n, l);\n      }\n\n      setCenteredElement(\n          matrix, l, m, n,\n          uvwCoefficients[0] + uvwCoefficients[1] + uvwCoefficients[2]);\n    }\n  }\n}\n\n\n/**\n * Compute the HOA rotation matrix after setting the transform matrix.\n * @param {Array} matrix - N matrices of gainNodes, each with (2n+1) x (2n+1)\n * elements, where n=1,2,...,N.\n */\nfunction computeHOAMatrices(matrix) {\n  // We start by computing the 2nd-order matrix from the 1st-order matrix.\n  for (let i = 2; i <= matrix.length; i++) {\n    computeBandRotation(matrix, i);\n  }\n}\n\n\n/**\n * Higher-order-ambisonic decoder based on gain node network. We expect\n * the order of the channels to conform to ACN ordering. Below are the helper\n * methods to compute SH rotation using recursion. The code uses maths described\n * in the following papers:\n *  [1] R. Green, "Spherical Harmonic Lighting: The Gritty Details", GDC 2003,\n *      http://www.research.scea.com/gdc2003/spherical-harmonic-lighting.pdf\n *  [2] J. Ivanic and K. Ruedenberg, "Rotation Matrices for Real\n *      Spherical Harmonics. Direct Determination by Recursion", J. Phys.\n *      Chem., vol. 100, no. 15, pp. 6342-6347, 1996.\n *      http://pubs.acs.org/doi/pdf/10.1021/jp953350u\n *  [2b] Corrections to initial publication:\n *       http://pubs.acs.org/doi/pdf/10.1021/jp9833350\n * @constructor\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number} ambisonicOrder - Ambisonic order.\n */\nfunction HOARotator(context, ambisonicOrder) {\n  this._context = context;\n  this._ambisonicOrder = ambisonicOrder;\n\n  // We need to determine the number of channels K based on the ambisonic order\n  // N where K = (N + 1)^2.\n  const numberOfChannels = (ambisonicOrder + 1) * (ambisonicOrder + 1);\n\n  this._splitter = this._context.createChannelSplitter(numberOfChannels);\n  this._merger = this._context.createChannelMerger(numberOfChannels);\n\n  // Create a set of per-order rotation matrices using gain nodes.\n  this._gainNodeMatrix = [];\n  let orderOffset;\n  let rows;\n  let inputIndex;\n  let outputIndex;\n  let matrixIndex;\n  for (let i = 1; i <= ambisonicOrder; i++) {\n    // Each ambisonic order requires a separate (2l + 1) x (2l + 1) rotation\n    // matrix. We compute the offset value as the first channel index of the\n    // current order where\n    //   k_last = l^2 + l + m,\n    // and m = -l\n    //   k_last = l^2\n    orderOffset = i * i;\n\n    // Uses row-major indexing.\n    rows = (2 * i + 1);\n\n    this._gainNodeMatrix[i - 1] = [];\n    for (let j = 0; j < rows; j++) {\n      inputIndex = orderOffset + j;\n      for (let k = 0; k < rows; k++) {\n        outputIndex = orderOffset + k;\n        matrixIndex = j * rows + k;\n        this._gainNodeMatrix[i - 1][matrixIndex] = this._context.createGain();\n        this._splitter.connect(\n            this._gainNodeMatrix[i - 1][matrixIndex], inputIndex);\n        this._gainNodeMatrix[i - 1][matrixIndex].connect(\n            this._merger, 0, outputIndex);\n      }\n    }\n  }\n\n  // W-channel is not involved in rotation, skip straight to ouput.\n  this._splitter.connect(this._merger, 0, 0);\n\n  // Default Identity matrix.\n  this.setRotationMatrix3(new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]));\n\n  // Input/Output proxy.\n  this.input = this._splitter;\n  this.output = this._merger;\n}\n\n\n/**\n * Updates the rotation matrix with 3x3 matrix.\n * @param {Number[]} rotationMatrix3 - A 3x3 rotation matrix. (column-major)\n */\nHOARotator.prototype.setRotationMatrix3 = function(rotationMatrix3) {\n  this._gainNodeMatrix[0][0].gain.value = -rotationMatrix3[0];\n  this._gainNodeMatrix[0][1].gain.value = rotationMatrix3[1];\n  this._gainNodeMatrix[0][2].gain.value = -rotationMatrix3[2];\n  this._gainNodeMatrix[0][3].gain.value = -rotationMatrix3[3];\n  this._gainNodeMatrix[0][4].gain.value = rotationMatrix3[4];\n  this._gainNodeMatrix[0][5].gain.value = -rotationMatrix3[5];\n  this._gainNodeMatrix[0][6].gain.value = -rotationMatrix3[6];\n  this._gainNodeMatrix[0][7].gain.value = rotationMatrix3[7];\n  this._gainNodeMatrix[0][8].gain.value = -rotationMatrix3[8];\n  computeHOAMatrices(this._gainNodeMatrix);\n};\n\n\n/**\n * Updates the rotation matrix with 4x4 matrix.\n * @param {Number[]} rotationMatrix4 - A 4x4 rotation matrix. (column-major)\n */\nHOARotator.prototype.setRotationMatrix4 = function(rotationMatrix4) {\n  this._gainNodeMatrix[0][0].gain.value = -rotationMatrix4[0];\n  this._gainNodeMatrix[0][1].gain.value = rotationMatrix4[1];\n  this._gainNodeMatrix[0][2].gain.value = -rotationMatrix4[2];\n  this._gainNodeMatrix[0][3].gain.value = -rotationMatrix4[4];\n  this._gainNodeMatrix[0][4].gain.value = rotationMatrix4[5];\n  this._gainNodeMatrix[0][5].gain.value = -rotationMatrix4[6];\n  this._gainNodeMatrix[0][6].gain.value = -rotationMatrix4[8];\n  this._gainNodeMatrix[0][7].gain.value = rotationMatrix4[9];\n  this._gainNodeMatrix[0][8].gain.value = -rotationMatrix4[10];\n  computeHOAMatrices(this._gainNodeMatrix);\n};\n\n\n/**\n * Returns the current 3x3 rotation matrix.\n * @return {Number[]} - A 3x3 rotation matrix. (column-major)\n */\nHOARotator.prototype.getRotationMatrix3 = function() {\n  let rotationMatrix3 = new Float32Array(9);\n  rotationMatrix3[0] = -this._gainNodeMatrix[0][0].gain.value;\n  rotationMatrix3[1] = this._gainNodeMatrix[0][1].gain.value;\n  rotationMatrix3[2] = -this._gainNodeMatrix[0][2].gain.value;\n  rotationMatrix3[4] = -this._gainNodeMatrix[0][3].gain.value;\n  rotationMatrix3[5] = this._gainNodeMatrix[0][4].gain.value;\n  rotationMatrix3[6] = -this._gainNodeMatrix[0][5].gain.value;\n  rotationMatrix3[8] = -this._gainNodeMatrix[0][6].gain.value;\n  rotationMatrix3[9] = this._gainNodeMatrix[0][7].gain.value;\n  rotationMatrix3[10] = -this._gainNodeMatrix[0][8].gain.value;\n  return rotationMatrix3;\n};\n\n\n/**\n * Returns the current 4x4 rotation matrix.\n * @return {Number[]} - A 4x4 rotation matrix. (column-major)\n */\nHOARotator.prototype.getRotationMatrix4 = function() {\n  let rotationMatrix4 = new Float32Array(16);\n  rotationMatrix4[0] = -this._gainNodeMatrix[0][0].gain.value;\n  rotationMatrix4[1] = this._gainNodeMatrix[0][1].gain.value;\n  rotationMatrix4[2] = -this._gainNodeMatrix[0][2].gain.value;\n  rotationMatrix4[4] = -this._gainNodeMatrix[0][3].gain.value;\n  rotationMatrix4[5] = this._gainNodeMatrix[0][4].gain.value;\n  rotationMatrix4[6] = -this._gainNodeMatrix[0][5].gain.value;\n  rotationMatrix4[8] = -this._gainNodeMatrix[0][6].gain.value;\n  rotationMatrix4[9] = this._gainNodeMatrix[0][7].gain.value;\n  rotationMatrix4[10] = -this._gainNodeMatrix[0][8].gain.value;\n  return rotationMatrix4;\n};\n\n\n/**\n * Get the current ambisonic order.\n * @return {Number}\n */\nHOARotator.prototype.getAmbisonicOrder = function() {\n  return this._ambisonicOrder;\n};\n\n\nmodule.exports = HOARotator;\n\n\n//# sourceURL=webpack:///./src/hoa-rotator.js?')},"./src/main.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Namespace for Omnitone library.\n */\n\n\n\n\nexports.Omnitone = __webpack_require__(/*! ./omnitone.js */ "./src/omnitone.js");\n\n\n//# sourceURL=webpack:///./src/main.js?')},"./src/omnitone.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Omnitone library name space and user-facing APIs.\n */\n\n\n\n\nconst BufferList = __webpack_require__(/*! ./buffer-list.js */ "./src/buffer-list.js");\nconst FOAConvolver = __webpack_require__(/*! ./foa-convolver.js */ "./src/foa-convolver.js");\nconst FOARenderer = __webpack_require__(/*! ./foa-renderer.js */ "./src/foa-renderer.js");\nconst FOARotator = __webpack_require__(/*! ./foa-rotator.js */ "./src/foa-rotator.js");\nconst FOARouter = __webpack_require__(/*! ./foa-router.js */ "./src/foa-router.js");\nconst HOAConvolver = __webpack_require__(/*! ./hoa-convolver.js */ "./src/hoa-convolver.js");\nconst HOARenderer = __webpack_require__(/*! ./hoa-renderer.js */ "./src/hoa-renderer.js");\nconst HOARotator = __webpack_require__(/*! ./hoa-rotator.js */ "./src/hoa-rotator.js");\nconst Polyfill = __webpack_require__(/*! ./polyfill.js */ "./src/polyfill.js");\nconst Utils = __webpack_require__(/*! ./utils.js */ "./src/utils.js");\nconst Version = __webpack_require__(/*! ./version.js */ "./src/version.js");\n\n\n/**\n * Omnitone namespace.\n * @namespace\n */\nlet Omnitone = {};\n\n\n/**\n * @typedef {Object} BrowserInfo\n * @property {string} name - Browser name.\n * @property {string} version - Browser version.\n */\n\n/**\n * An object contains the detected browser name and version.\n * @memberOf Omnitone\n * @static {BrowserInfo}\n */\nOmnitone.browserInfo = Polyfill.getBrowserInfo();\n\n\n/**\n * Performs the async loading/decoding of multiple AudioBuffers from multiple\n * URLs.\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {string[]} bufferData - An ordered list of URLs.\n * @param {Object} [options] - BufferList options.\n * @param {String} [options.dataType=\'url\'] - BufferList data type.\n * @return {Promise<AudioBuffer[]>} - The promise resolves with an array of\n * AudioBuffer.\n */\nOmnitone.createBufferList = function(context, bufferData, options) {\n  const bufferList =\n      new BufferList(context, bufferData, options || {dataType: \'url\'});\n  return bufferList.load();\n};\n\n\n/**\n * Perform channel-wise merge on multiple AudioBuffers. The sample rate and\n * the length of buffers to be merged must be identical.\n * @static\n * @function\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {AudioBuffer[]} bufferList - An array of AudioBuffers to be merged\n * channel-wise.\n * @return {AudioBuffer} - A single merged AudioBuffer.\n */\nOmnitone.mergeBufferListByChannel = Utils.mergeBufferListByChannel;\n\n\n/**\n * Perform channel-wise split by the given channel count. For example,\n * 1 x AudioBuffer(8) -> splitBuffer(context, buffer, 2) -> 4 x AudioBuffer(2).\n * @static\n * @function\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {AudioBuffer} audioBuffer - An AudioBuffer to be splitted.\n * @param {Number} splitBy - Number of channels to be splitted.\n * @return {AudioBuffer[]} - An array of splitted AudioBuffers.\n */\nOmnitone.splitBufferbyChannel = Utils.splitBufferbyChannel;\n\n\n/**\n * Creates an instance of FOA Convolver.\n * @see FOAConvolver\n * @param {BaseAudioContext} context The associated AudioContext.\n * @param {AudioBuffer[]} [hrirBufferList] - An ordered-list of stereo\n * @return {FOAConvolver}\n */\nOmnitone.createFOAConvolver = function(context, hrirBufferList) {\n  return new FOAConvolver(context, hrirBufferList);\n};\n\n\n/**\n * Create an instance of FOA Router.\n * @see FOARouter\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number[]} channelMap - Routing destination array.\n * @return {FOARouter}\n */\nOmnitone.createFOARouter = function(context, channelMap) {\n  return new FOARouter(context, channelMap);\n};\n\n\n/**\n * Create an instance of FOA Rotator.\n * @see FOARotator\n * @param {AudioContext} context - Associated AudioContext.\n * @return {FOARotator}\n */\nOmnitone.createFOARotator = function(context) {\n  return new FOARotator(context);\n};\n\n\n/**\n * Creates HOARotator for higher-order ambisonics rotation.\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number} ambisonicOrder - Ambisonic order.\n * @return {HOARotator}\n */\nOmnitone.createHOARotator = function(context, ambisonicOrder) {\n  return new HOARotator(context, ambisonicOrder);\n};\n\n\n/**\n * Creates HOAConvolver performs the multi-channel convolution for the optmized\n * binaural rendering.\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Number} ambisonicOrder - Ambisonic order. (2 or 3)\n * @param {AudioBuffer[]} [hrirBufferList] - An ordered-list of stereo\n * AudioBuffers for convolution. (SOA: 5 AudioBuffers, TOA: 8 AudioBuffers)\n * @return {HOAConvovler}\n */\nOmnitone.createHOAConvolver = function(\n    context, ambisonicOrder, hrirBufferList) {\n  return new HOAConvolver(context, ambisonicOrder, hrirBufferList);\n};\n\n\n/**\n * Create a FOARenderer, the first-order ambisonic decoder and the optimized\n * binaural renderer.\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Object} config\n * @param {Array} [config.channelMap] - Custom channel routing map. Useful for\n * handling the inconsistency in browser\'s multichannel audio decoding.\n * @param {Array} [config.hrirPathList] - A list of paths to HRIR files. It\n * overrides the internal HRIR list if given.\n * @param {RenderingMode} [config.renderingMode=\'ambisonic\'] - Rendering mode.\n * @return {FOARenderer}\n */\nOmnitone.createFOARenderer = function(context, config) {\n  return new FOARenderer(context, config);\n};\n\n\n/**\n * Creates HOARenderer for higher-order ambisonic decoding and the optimized\n * binaural rendering.\n * @param {AudioContext} context - Associated AudioContext.\n * @param {Object} config\n * @param {Number} [config.ambisonicOrder=3] - Ambisonic order.\n * @param {Array} [config.hrirPathList] - A list of paths to HRIR files. It\n * overrides the internal HRIR list if given.\n * @param {RenderingMode} [config.renderingMode=\'ambisonic\'] - Rendering mode.\n * @return {HOARenderer}\n */\nOmnitone.createHOARenderer = function(context, config) {\n  return new HOARenderer(context, config);\n};\n\n\n// Handle Pre-load Tasks: detects the browser information and prints out the\n// version number. If the browser is Safari, patch prefixed interfaces.\n(function() {\n  Utils.log(\'Version \' + Version + \' (running \' +\n      Omnitone.browserInfo.name + \' \' + Omnitone.browserInfo.version +\n      \' on \' + Omnitone.browserInfo.platform +\')\');\n  if (Omnitone.browserInfo.name.toLowerCase() === \'safari\') {\n    Polyfill.patchSafari();\n    Utils.log(Omnitone.browserInfo.name + \' detected. Polyfill applied.\');\n  }\n})();\n\n\nmodule.exports = Omnitone;\n\n\n//# sourceURL=webpack:///./src/omnitone.js?')},"./src/polyfill.js":function(module,exports,__webpack_require__){"use strict";eval("/**\n * @license\n * Copyright 2017 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Cross-browser support polyfill for Omnitone library.\n */\n\n\n\n\n/**\n * Detects browser type and version.\n * @return {string[]} - An array contains the detected browser name and version.\n */\nexports.getBrowserInfo = function() {\n  const ua = navigator.userAgent;\n  let M = ua.match(\n      /(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*([\\d\\.]+)/i) ||\n      [];\n  let tem;\n\n  if (/trident/i.test(M[1])) {\n    tem = /\\brv[ :]+(\\d+)/g.exec(ua) || [];\n    return {name: 'IE', version: (tem[1] || '')};\n  }\n\n  if (M[1] === 'Chrome') {\n    tem = ua.match(/\\bOPR|Edge\\/(\\d+)/);\n    if (tem != null) {\n      return {name: 'Opera', version: tem[1]};\n    }\n  }\n\n  M = M[2] ? [M[1], M[2]] : [navigator.appName, navigator.appVersion, '-?'];\n  if ((tem = ua.match(/version\\/([\\d.]+)/i)) != null) {\n    M.splice(1, 1, tem[1]);\n  }\n\n  let platform = ua.match(/android|ipad|iphone/i);\n  if (!platform) {\n    platform = ua.match(/cros|linux|mac os x|windows/i);\n  }\n\n  return {\n    name: M[0],\n    version: M[1],\n    platform: platform ? platform[0] : 'unknown',\n  };\n};\n\n\n/**\n * Patches AudioContext if the prefixed API is found.\n */\nexports.patchSafari = function() {\n  if (window.webkitAudioContext && window.webkitOfflineAudioContext) {\n    window.AudioContext = window.webkitAudioContext;\n    window.OfflineAudioContext = window.webkitOfflineAudioContext;\n  }\n};\n\n\n//# sourceURL=webpack:///./src/polyfill.js?")},"./src/resources/omnitone-foa-hrir-base64.js":function(module,exports){eval('const OmnitoneFOAHrirBase64 = [\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wIA9v8QAPv/CwD+/wcA/v8MAP//AQD7/wEACAAEAPj/+v8YABAA7v/n//v/9P/M/8D//f34/R38EvzxAfEBtA2lDTcBJQFJ9T71FP0D/cD1tfVo/Wv9uPTO9PPmOufc/U/+agL3Aisc/RxuGKEZBv3j/iYMzQ2gAzsEQQUABiQFrASzA5cB2QmyCy0AtgR4AeYGtfgAA2j5OQHP+scArPsMBJgEggIEBtz6+QVq/pj/aPg8BPP3gQEi+jEAof0fA1v9+/7S+8IBjvwd/xD4IADL/Pf9zvs+/l3+wgB7/+L+7fzFADH9kf6A+n3+DP6+/TP9xP68/pn+w/26/i39YgA0/u790Pt9/kD+7v1s/Wb+8f4C/1P+pf/x/cT+6/3p/Xz9ff5F/0f9G/4r/6v/4P5L/sL+ff7c/pj+Ov7X/UT+9P5G/oz+6v6A/2D+9/6P/8r/bP7m/ij+C//e/tj/Gf4e/9v+FwDP/lz/sP7F/2H+rv/G/s7/Hf7y/4P+NAD9/k0AK/6w/zP/hACh/sX/gf44AOP+dgCm/iUAk/5qAOD+PwC+/jEAWP4CAAr/bQBw/vv/zf5iACD/OgCS/uD/Cv9oAAb/CgDK/kwA//5tACH/TgCg/h4AHP9aABP/JADP/hEAYv9gAAj/3f8m/ysAYv8gACX/8/8k/ysAXv8bABH//v8j/ygAa/8qAAD/9f9g/1YAWf8JACH/AgB2/z4AXP/w/z3/FgB2/ykAX//9/z//EwCV/zUAS//n/1T/GACK/x4ATv/0/4P/QQB4//v/WP/2/3X/HAB8//P/V//3/2f/AQBh/9v/Tf/x/5P/IwCI/wMAf/8hAKP/JACZ/xUAiv8nAK//HgCr/yMAm/8uAMz/OACi/yQAqf87AMT/MwCY/yUAtP9FAMH/KgCu/ycAyP85AMv/IwCz/xoA1f8qAMn/FgC8/xQA4/8nAMX/CwDJ/xQA4f8ZAMH/BgDO/xQA4f8WAMP/BwDU/xQA4P8QAMH/AQDb/xQA3P8JAMP/AgDh/xIA2v8EAMj/AgDk/w0A1f/+/8v/AwDm/wwA0v/+/9H/BgDl/wkAzv/8/9T/BwDk/wcAzv/8/9r/CQDi/wQAzf/8/9//CADf////0P/9/+L/BwDd//7/0////+T/BgDb//z/1f8AAOf/BQDZ//v/2v8CAOb/AwDY//v/3v8EAOb/AgDY//3/4f8FAOX/AQDZ//7/5P8GAOP/AADb/wAA5/8GAOH////d/wIA5/8FAOD////f/wMA6P8FAOD////h/wQA6P8EAN7////h/wUA4v8DANv/AQDd/wQA3P8CANn/AgDb/wMA2/8CANv/AgDd/wIA3v8CAOH/AQDj/wEA",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAAAA/f8CAP//AQD//wEA//8BAP3/AAACAP7/+f8AAAIA/P8FAAQA8/8AABoA+f/V/wQAHQDO/xoAQQBO/ocA0Px1/ucHW/4UCm8HLO6kAjv8/fCRDdAAYfPiBIgFXveUCM0GBvh6/nz7rf0J/QcQSRVdBgoBSgFR62r9NP8m+LoEAvriBVAAiAPmABEGMf2l+SwBjva6/G4A//8P/CYDMgXm/R0CKAE6/fcBBwAtAND+kQA0A5UDhwFs/8IB8fydAEP/A/8v/e7/mP8j/2YBIwE3Av0AYv+uAOD8lgAg/wwAIf/L/n0Ae//OAJMB3P/XAF//XwCM/08AB/8NAEf/rf4jAT3/lgAJAP4AHgDpAO8AUf9L/07/Qf8KAOD/x/+D/3sATQCDAMoA0f79/+L/EQDt/7EAqv+S/7IAuv/o/wgAc//X//H/SwCm/+3/Yf/B/yoAAADI/7X/AwBg/5EATgCX/xYA/P+q/00AVACY/6v/BADD/zwALQCN/8z/KQDu/ygAEgCZ/6f/VQDC//T/KQCs/7P/UgAfAO7/NgC8/57/awAZAPP/+P/V/8z/bQBBAL//DgD0/+T/TABBAMz/CwAxAPz/SQBqALn/BgALAPz/EAA7AIz/3/8iAAUA//8kALf/y/9VABQA+v81AOj/0P9cAB4A+f8WAOr/vv83ABgAw/8JAOj/4f8nACIAsf/y/w4A3v8gACQAxP/n/ycA7P8WAC0Ayf/U/ycA9v/7/yUA0P/P/zUABADc/xUA5P/J/zcACwDS/xUA9P/m/zAACQDX/+3/9v/2/yQACgDZ/+P/AwAKABYA///b/9j/EQALABkADgD6/+7/GwD4/w4A8P/w//j/EgAEAAUA9f/1/wQAGgD4/wAA5////wAAGQD1////7f8FAAUAFQDv/wAA6v8LAAcAFQDs/wEA9P8SAAYACwDr//7/AQASAAYABQDv/wIAAwAWAAIAAgDv/wAABgATAAEA/f/u/wQABgAQAPr/+P/z/wUACQALAPj/9//4/wgABwAKAPT/+f/5/w4ABwAIAPT/+//9/w4AAwADAPH//f///w8A//8BAPP///8BAA0A/f/+//X/AgACAA0A+//8//b/BAADAAoA+f/7//n/BgADAAcA+P/7//v/BwABAAQA+P/8//3/CQABAAIA9//9////CQD/////+P///wAACAD9//7/+f8AAAAABwD8//3/+v8CAAAABgD7//z//P8EAAAABAD6//3//P8FAP//AgD6//7//v8FAP7/AQD7//////8GAP7/AAD7/wEA//8EAP3/AAD9/wEA/v8DAP3/AAD9/wIA/v8CAP3/AQD9/wIA/v8CAP7/AQD+/wEA",\n];\n\nmodule.exports = OmnitoneFOAHrirBase64;\n\n\n//# sourceURL=webpack:///./src/resources/omnitone-foa-hrir-base64.js?')},"./src/resources/omnitone-soa-hrir-base64.js":function(module,exports){eval('const OmnitoneSOAHrirBase64 = [\n"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/P////v//P8CAAQA+//+//3//f8CAAUA+v/9//////8AAAQA+v/8////AAD//wIA+//8/wAAAQD+/wEA+//8/wAAAgD9/////P/9/wEAAgD8//7//f/9/wAAAgD8//3//v/+////AQD8//z/////////AAD8//3///8AAP7/AAD9//7///8AAP7////+//////8AAP7////+////////////////////",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD//////v8AAP///////wAAAAAAAP7/AQABAAAABwD///X/BQAjAPL/CQDb/9D/GAAb/7sAYwCW/z0BcP/X/7T/2QDW+wH8yANCCCUJ5QT++UXmhPwhA78FuAxH+p78ifudBlAG9vmu/lAK2fdlB///cfjoCa0E7Akn9Yb/zvba+AkAHPywBGEBFwUNAL8AXAAGA20DFvmR/kz+F/06Ag/+GwHl/5EEKgJd/q0AP/ym/9n6EfxY/2H+/QFtAC4C6QBDAaMCo/20/+3/3f/p/fL9rv9V/6cBhQHuAX4AcwJYAaH/IP/P/gsApP0LAe7/sQBuAI0AAgGDAE4BzACe/5X//v+v/+f+Zf+gAOv/5QBhAOIApAANASYAuP+h/8b/HQBr/9//bACWAGEAFAB5AD0AWQDU/+D/Yf/p//D/s/+R/4QAMQBvABEAkQBfABQAJgDW/wwA8/8XALz/vf8zAFAAKwD1/zEAPwDJ/x0A7/8LAOX/FwDR//H/EQAdAO//6P8QAFEA2f8WABEAMgDy/xIA+f/s/xAALgDv////HQAvAPT/+f8iAAYAEgAFABoAGgD//w0A+f/0/xsAHgDx/9f/GAACAPH/8f8JAPf/GwALABEA7/8cAPT/CgD2//j/BQD8/+3/OgAgAAYA9f8PAN7/DgD9/9r/1//3/+3/9//1//b/8//5//f/AgAJAOf/+v8OAAMACwD9/+7/5f8eAAEA9//q//7/8P8WAP7/+//4/wIA+f8TAAIA9f/5/wcA+P8iAAgA9v/n/xoA//8gAAUABwDj/wAA9v8BAAUAFQDn/wMA7v8QABAAEQDm/wwA8f8aAAAABwDu/wcACgASAAEA7//w//f/BgARAAkA6P/3/wcADgAKAAYA4f/4/wYADgAAAPr/8P/9/xQACgAHAPn/7//9/xEAAgD+//L/8v/8/xUAAwDw//H/9f8CAAsA/v/q//L/+f8FAAYA/P/r//j///8GAAkA+//o//j/AQAIAP//+v/o//v/CAAIAPv/+P/w/wEACQAHAPj/+f/0/wIACwAFAPb/+f/4/wQACwACAPP/+f/+/wYACAD///L/+/8BAAYABQD9//P//P8FAAUAAgD7//T//f8HAAQA///7//f///8IAAMA/P/6//r/AQAIAAEA+v/6//3/AgAHAAAA+f/7/wAAAwAFAP7/+P/8/wIAAgACAP3/+f/9/wMAAwAAAPz/+v/+/wQAAgD+//z/+/8AAAQAAQD8//z//f8BAAQAAAD7//3///8BAAMA///7//3/AAACAAEA/v/7//7/AQABAAAA/v/9////AQAAAP///v/+////AAD/////////////////////////////",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD////////+//////8AAAAA/v/+/wAAAQD8//3/CQAJAP3/+v8PAAcApABlABkBkwCO/i//lfqa/HQAcf/3BdkCzwJcBCMC0wMN/9/9wgI7AaECYfxV/Tf83vhn/xrt8Owx/8n7cgHABYb43QcZDh4WugNrA7P74gHu/9z/zv0t/acCiQHY/iv4qQOl/ysCE/0//XT9Sf4O//j9xfupAn394gHO+rsCXAFIAxQC9wIXBgcD2AQuAnb/9gJh/6wAVfxEAI4Bvf7oAFv/bALsAMQBe/88/joAT/4dAH39/v9LAXn/gwDI//QBdABcAA0A7f4lAMn///+9/tv/iABp/13/pP/dALv/w/8MAHv//f+y/6////7U/5AAZP+Z/8r/nQDR/5r/DwDr/xAA4v+s/3z/+P9uAOv/t/82AGcAHgCb/yQAFQBGAM7/CgD3/xoAegAaAOz/CgBHAA8Adv8/AAAABQC2/xIAAAA7ABQAKgCj/z4AAQAXAJz/JAADAAcA8f/1/2AAAQAlAPD/NgDx/1wA7v/4/wMAZADv//3/HQAkAFoA8P9FAPv/FgBIAPf/WQAHAEUACQD0/xIAQwDu/wMAwP9VALn/XwCw/yEA5f8sAPj/FgDD/1YAyv8rAOX/HQDo//j/IQAQACAAHwD9/yQAHQBAABgABQAiAAUAKAD3/wkACwAKAAMABwAJAPb/+f8GAOr/JQAHABMA6P8TAA4AGgD//woA8/8ZAP//GADu/w0A9v8SAAMABwD4/wQA5P8XAAQACgDq/wUA+/8VAAcACADs/xIAAAATAPH/+v/1//T/7f///+z/+v/y/+//9/8KAAcACgAJAPT/BAAKAAAABgAIAPL/9v8KAAMABAACAPr/9v8OAAIA+P/x//v/+f8MAPb/+P/w/wQA9f8MAPn////7/woA/v8PAAEAAgD1/xAAAQAPAP//AwD//xQABwALAAAABgADABAAAgAHAAAACAABAA8ABQAFAAMABwAEAA4ABwADAAEACQAFAAoAAwD//wAACQADAAUAAQD/////CAABAAMAAAD/////BwACAAEAAAD/////BwACAP7///8BAAAABgABAP7///8CAAAABAAAAP7///8DAAAAAwAAAP3///8DAAAAAQAAAP3//v8EAAAAAAD+//////8EAP/////+/wAA/v8EAP/////+/wEA/v8EAP///v/+/wIA//8DAP///v/+/wIA//8BAP///v/+/wMA//8BAP/////+/wMA//8AAP//AAD+/wQA//8AAP7/AQD//wIA////////AQD//wIA////////AQAAAAEAAAAAAP//AQD//wEAAAAAAP//AQAAAAEAAAAAAAAA",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAD+/wAA+v8AAPz/AAD//wAA/f8AAAEAAAD+/wAACQAAAAQAAAAZAAAAtgAAAFsBAABW/gAAH/oAAGcBAABoBwAAlAAAAO3/AAARAQAA+wIAAEoEAACe/gAAiv4AALD0AADJ8wAAkQQAAF34AABi8QAAPQAAAAH2AAD19AAADAMAAJwGAACTEAAA0AwAAJkHAACOBwAAuQEAANcDAAC6AgAAHwUAAHEFAAB0AwAAbgEAADz+AADYAQAAGAAAAJwCAADgAAAA//0AAMn+AAAT/AAAwP8AAOn9AAAJAAAAewEAAOn+AACN/wAAOv0AAO3+AADN/gAAcP8AACj/AACq/gAA+f4AAML9AACa/wAA/f4AAN7/AABo/wAA6/4AAE//AAAC/wAAEQAAAHX/AAB0AAAA5f8AAEwAAAB3AAAA5/8AAMIAAABCAAAAzgAAAE8AAAB3AAAAKAAAADMAAACqAAAALwAAAK4AAAASAAAAVgAAACgAAAAtAAAATAAAAP3/AAA7AAAA2/8AACQAAADw/wAALQAAADEAAAAlAAAAbAAAADMAAABUAAAAEAAAACgAAAD1/wAA9v8AAPr/AADu/wAALgAAABIAAABUAAAARAAAAGUAAABGAAAAOAAAAGAAAAAuAAAARQAAACEAAAAfAAAAAAAAAAkAAAAQAAAAAwAAABIAAADs/wAAEAAAAAYAAAASAAAAIgAAABEAAAADAAAABAAAAA8AAAD4/wAAHQAAAAsAAAAIAAAADgAAAP//AAAcAAAADwAAAAYAAAASAAAAFwAAAAMAAAAYAAAAEgAAAPr/AAAQAAAADQAAAAoAAAD3/wAABgAAAPb/AADf/wAA/v8AAPL/AAD6/wAAFAAAAAQAAAAEAAAAGwAAAAEAAAAMAAAAIAAAAAIAAAAdAAAAGAAAAAIAAAAcAAAAEgAAAAcAAAAeAAAADwAAAAQAAAAeAAAABAAAAAYAAAAZAAAAAQAAAA4AAAATAAAA/v8AAAoAAAAOAAAA+/8AAAsAAAAJAAAA+f8AAAsAAAABAAAA+f8AAAoAAAD9/wAA+v8AAAcAAAD5/wAA+v8AAAUAAAD3/wAA/f8AAAQAAAD2/wAAAAAAAAEAAAD3/wAAAgAAAAAAAAD4/wAAAwAAAP7/AAD6/wAABAAAAP3/AAD8/wAABAAAAPv/AAD+/wAAAwAAAPv/AAD//wAAAQAAAPv/AAAAAAAAAAAAAPv/AAACAAAA//8AAPz/AAACAAAA/v8AAP3/AAACAAAA/f8AAP7/AAABAAAA/f8AAP//AAABAAAA/f8AAAAAAAAAAAAA/v8AAAEAAAAAAAAA//8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA",\n];\n\nmodule.exports = OmnitoneSOAHrirBase64;\n\n\n//# sourceURL=webpack:///./src/resources/omnitone-soa-hrir-base64.js?')},"./src/resources/omnitone-toa-hrir-base64.js":function(module,exports){eval('const OmnitoneTOAHrirBase64 = [\n"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AAD7/wEAAgD7//7/AQD8/wAAAwD8//3/AwD9/wAAAgD9//z/AwD/////AgD+//z/AwAAAP7/AQD///3/AgABAP3/AAAAAP3/AgACAPz///8BAP3/AQACAP3//v8BAP7/AAABAP3//v8CAP7///8BAP7//f8CAP////8AAAAA/v8CAAAAAAAAAAAA/v8BAAAAAAD//wAA//8AAP//AAD//wAA//8AAP//",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAP//AAD//wAA//8AAAAA/////wAAAQD+////AAAGAP3/OAABAIIAAwBv//f/E/0QAK0ADQCzA/7/8P4u/0cBDQCJA6ABbQDg/w7/z/9o+Vn/SPnL/1//Ef+2+jr9RfZgA5QFZwILDFj+PAb2/nEFKgKk/R0Dlv6b/FUDsP6YAoj9SgAT/iL/tAPwAv8A0P6zAr7/dwAnAf39uP22/skA2v///2YCoP4UAUsAZgF2AJH+4P70/rz9+f+U/Xv/8v7CAcb+TACS/kwAv/+x/tX9oP71/oL/1f8nAEUAZwGtAAgAIgC/AD4BaP8GAGH/dQDF/64Arf8nAakAhAH9/+kAQQD3AFb/q/8p/yIAR/8FAPD/ZAA/AIYA3v8tADQADQBp/3f/CwABAP3/Wf8OANj/WwDH/xoAe/8DAKz/zv96/z8A3f/J/5X/IAD5//j/q//c/+//RADq//D/vv8pADUAFQDI/y8ACAAbANb/OwD3/+3/9f/e/wcAIAAeAMH/8/8xAC0AEADW/+3/HAADAPv/8P8DAOL/OwD3/xcACQAHAM//5f8XAAcAz//T/9D/HgD9////yf/e//v/AgD//9H/6/////H/+/8hAAIA9//7/w0AFgAQAPL/2v/8/xsAGQABANz/9P8YAAQA/v/y/wMA5v8YAAkAAAAAAAMA7/8KABgADwDs//j/BwATABsA8P/1//z/BAAMAAAA9P/s/xAA/v8GAAkA/v/p/wMACwALAP7/9P/p/wcADQAFAPb/7//4/w0ACAD8//b//v/1/wMACwD1//T/8P/8/wAACQDz/+f/5P8GAAkABQD5//D/+v8FAA0AAwD///T/AgACABAA/v8CAPD/+/8FAAoA9f/3//f//v8GAP7/9v/t//z/+f8AAPj/+v/3/wEA+v8HAPr//P/5/wQA//8DAPr/+P/3/wYA///+//X/+//5/wQA/f/7//X/+//4/wMA/f/8//j//v/9/wYA///8//f/AgAAAAUA/f/6//n/AwACAAIA/f/7//z/AwACAAAA/f/6//3/AgADAP7//f/7/wAAAwAFAPz////8/wMAAgAEAPv//v/+/wMAAgADAPv//v///wMAAQABAPv//f8AAAIAAAD///v//f8BAAIA///+//z//v8CAAIA/v/9//3///8CAAEA/v/9//7/AAACAAAA/v/9////AAABAAAA/f/9/wAAAQABAP///f/+/wEAAQAAAP///v/+/wEAAQD///7//v///wEAAQD///7//v///wEAAAD+//7///8AAAAAAAD+//7///8AAAAA///+//7///8AAAAA////////AAAAAP////////////8AAP//////////",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAAAAAAABAAAAAAD//////////////v////3/////////+//8////AQD9//z/9f8BAAIA+f8dACgAWQBxAJX/qv+Y/uz9aP9k/7UDUQQBAiQA4Pgi/AkB0gKaBsD/+fxp/vz9CQSp/I/+ywDO+vMD0fzK/PABcgBeBfoBv/+uAuH9Sf5gAy39awMmBWUBuP9fA9/9fgDj/2/+EACaACcCSv9Z/2j/rv7hAA0AWf55/7L84P7E/SIAT/67AMv/tf+FAA7/1v+7/gv/IP+E/sQA+P5aAXz/tP9XAFX/tP8o/4r/j//e/yQAMv9mAJT/rgCr/9X/EwCb//H/9f7F/6D/EAAoAK3//v+e/zsAh/+B/7r/if/C/2r/4P/z/6//HwCy/0IA7/9ZALT/y/80ACgA9v/J/9//DgA5ADUALQARADIACwAfAOf/NgArACMACQBBAEcAGAAjAC4AWQBUAHcAAAAfACEAIAAcAPj/CADk/yQA7v89AEEAFwD5/xYA6f8aAOX/AADF/zQADwAUAOT/BQDr/yUA6P8XAOf/HADR/0AA8P8nAAgACQDt/ycAKAAHAPH/IQDz/xsACADn//n/DgADAA4A8P///8z/GgDN/yMA/f8QANj/MwACAC0ACwAOAO3/JgAZAAUACgAAAA4AIgAaAAkADwACAAAAHQATAAUABQACAAgACwAjAO////8AAA8ABQAPAPL//f8GAAsABgAGAPD/8v8GAPz/CAD6//H/6v8PAAgABgD4//3/9v8aAAgABwD1//7//v8QAAoACAD//wUA9v8QAAoABAAFAAgAAgAJAAoAAwD//w0AAgD//wcA/v8DAAoABQAFABUABAAKAAYABwAHAA8ACgAGAAwADwAMAAkAEAAJAAgADwAMAAgADgAJAAUACQAPAAUACwAHAAEABgAIAAEABAAGAP//AgAJAAAAAgAEAP7///8IAAIA//8GAAEAAQAJAAIA/v8EAAMA//8JAAEA/v8DAAMA/v8HAAMA/f8BAAUA/v8FAAMA/v8BAAcA//8DAAMA/v8BAAYA//8CAAMA/////wcAAAAAAAMAAAD//wYAAQD+/wMAAQD//wUAAQD+/wIAAgD//wQAAgD+/wEAAwD//wMAAwD+/wEAAwD//wIAAwD//wEABAAAAAEABAD//wAABAABAAAAAwAAAAAABAABAP//AwABAAAAAwACAP//AgACAAAAAwACAP//AgACAAAAAgACAAAAAQADAAAAAQACAAAAAQADAAAAAQACAAAAAAACAAEAAAACAAEAAAACAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAABAAEAAAAAAAAAAAAAAAAA",\n"UklGRiQEAABXQVZFZm10IBAAAAABAAIAgLsAAADuAgAEABAAZGF0YQAEAAAAAP//AAD//wAA//8AAAAA//8AAP//AAACAAAA+f8BAAYA///4/wIA//8AAA8A/v/V/wEAEwA9AAEBRwA2AF7/kfog/3gBwv99CDYBU/qtAUX/AP7OAfkAX/o9B38FSfwaAuT14/60BAr8CQAI/tfyIQTzAXP+egdUBBwBof7TBMT8bAWi/5EEWwBRAAAKyfxE/8b88vp6ACP+PAF4/qD8MQNM/ygCJ/2XAPD9kP5gAVT/iP9I/lEB4P8qAD0BFAGa/+7/DgB2AOP98gFm/u/+Vv5/AG8ASP9gAM//qv9w//oAcv+2/jIBHgA7/6D/oAAGAKH/lADT/wAAggC8AAYAkP9yAEcAkf8BAOD/RAAr/zUANwDt/xQAJQAkAMT/zwA/AOH/xv9zAGsANQBTAIcALAAvACIATACy/xMADADg/xcAWABvAJL/7f9VAPb/EgDt/wcA4f8kAPP/5P+h/wgACQDy//r/LgAQAMn/8/9CAOX/5v/S/9//3P8pABYAuP/s/w8AFgDt/+3/7v/w/9j/5/8GAOf/2P/2//P//v8kABMAuf/m/xoADADZ/+r/3P8KAAUAKwDe/wsA3P8VAAAADgAfAB0ACAAMAF4AGgAhAPL/MwDz/0kABAAKAPX/LwAbAAkA9v/s/+3/8/8CABAAAADm//n/BQALAAUAAQDj//n/JQAVAPX/9v/+/wIAEQABAPP/8P/1/wAABgD6/+3/7//o//j/DAD8/+b/8P8IAAkABgD4//D/8P8UAAoAAwD4/wAA+f8OAAcAAAAFAPX/9v8TAAkA8v8EAPb/9/8dAA0A7/8CAPn/+f8SAAQA8/8CAOf/+v8DAAgA9P////H//P8IAAUA8//0/wIAAQAGAAgA9//7/wAA+/8EAP//+P/+////AgACAAsA8v/+/wIABQD7/wgA9v/7/wMABAD5/wAA/P/3/wEAAQD7//7//P/1/wQA///3//r////3/wMAAwD1//r/AwD6////AgD4//n/AwD8//7/AgD4//n/AwD+//3/AQD4//n/BQD///n/AAD6//j/BAABAPj/AAD9//v/AwADAPj//v/+//z/AwAEAPj//v8BAP7/AQADAPj//f8CAP////8EAPr//P8DAAAA/v8CAPv//P8DAAEA/f8BAP3//f8DAAIA/P8AAP7//f8DAAIA/P///wAA/f8BAAIA+//+/wEA//8AAAEA+//+/wEA/////wEA/P/+/wEA///+/wAA/f/9/wEAAAD9/wAA/f/+/wEAAQD8/////v/+/wAAAQD8////////////AQD9////AAD/////AAD+////AAAAAP//AAD///////8AAP//AAD//wAA//8AAP//",\n];\n\nmodule.exports = OmnitoneTOAHrirBase64;\n\n\n//# sourceURL=webpack:///./src/resources/omnitone-toa-hrir-base64.js?')},"./src/utils.js":function(module,exports){eval("/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Omnitone library common utilities.\n */\n\n\n/**\n * Omnitone library logging function.\n * @param {any} Message to be printed out.\n */\nexports.log = function() {\n  let message = '[Omnitone] ' + Array.prototype.slice.call(arguments).join(' ')\n      + ' (' + performance.now().toFixed(2) + 'ms)';\n  window.console.log(message);\n};\n\n\n/**\n * Omnitone library error-throwing function.\n * @param {any} Message to be printed out.\n */\nexports.throw = function() {\n  let message = '[Omnitone] ' + Array.prototype.slice.call(arguments).join(' ')\n      + ' (' + performance.now().toFixed(2) + 'ms)';\n  throw new Error(message);\n};\n\n\n// Static temp storage for matrix inversion.\nlet a00;\nlet a01;\nlet a02;\nlet a03;\nlet a10;\nlet a11;\nlet a12;\nlet a13;\nlet a20;\nlet a21;\nlet a22;\nlet a23;\nlet a30;\nlet a31;\nlet a32;\nlet a33;\nlet b00;\nlet b01;\nlet b02;\nlet b03;\nlet b04;\nlet b05;\nlet b06;\nlet b07;\nlet b08;\nlet b09;\nlet b10;\nlet b11;\nlet det;\n\n\n/**\n * A 4x4 matrix inversion utility. This does not handle the case when the\n * arguments are not proper 4x4 matrices.\n * @param {Float32Array} out   The inverted result.\n * @param {Float32Array} a     The source matrix.\n * @return {Float32Array} out\n */\nexports.invertMatrix4 = function(out, a) {\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11];\n  a30 = a[12];\n  a31 = a[13];\n  a32 = a[14];\n  a33 = a[15];\n  b00 = a00 * a11 - a01 * a10;\n  b01 = a00 * a12 - a02 * a10;\n  b02 = a00 * a13 - a03 * a10;\n  b03 = a01 * a12 - a02 * a11;\n  b04 = a01 * a13 - a03 * a11;\n  b05 = a02 * a13 - a03 * a12;\n  b06 = a20 * a31 - a21 * a30;\n  b07 = a20 * a32 - a22 * a30;\n  b08 = a20 * a33 - a23 * a30;\n  b09 = a21 * a32 - a22 * a31;\n  b10 = a21 * a33 - a23 * a31;\n  b11 = a22 * a33 - a23 * a32;\n  det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n  return out;\n};\n\n\n/**\n * Check if a value is defined in the ENUM dictionary.\n * @param {Object} enumDictionary - ENUM dictionary.\n * @param {Number|String} entryValue - a value to probe.\n * @return {Boolean}\n */\nexports.isDefinedENUMEntry = function(enumDictionary, entryValue) {\n  for (let enumKey in enumDictionary) {\n    if (entryValue === enumDictionary[enumKey]) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Check if the given object is an instance of BaseAudioContext.\n * @param {AudioContext} context - A context object to be checked.\n * @return {Boolean}\n */\nexports.isAudioContext = function(context) {\n  // TODO(hoch): Update this when BaseAudioContext is available for all\n  // browsers.\n  return context instanceof AudioContext ||\n    context instanceof OfflineAudioContext;\n};\n\n\n/**\n * Check if the given object is a valid AudioBuffer.\n * @param {Object} audioBuffer An AudioBuffer object to be checked.\n * @return {Boolean}\n */\nexports.isAudioBuffer = function(audioBuffer) {\n  return audioBuffer instanceof AudioBuffer;\n};\n\n\n/**\n * Perform channel-wise merge on multiple AudioBuffers. The sample rate and\n * the length of buffers to be merged must be identical.\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {AudioBuffer[]} bufferList - An array of AudioBuffers to be merged\n * channel-wise.\n * @return {AudioBuffer} - A single merged AudioBuffer.\n */\nexports.mergeBufferListByChannel = function(context, bufferList) {\n  const bufferLength = bufferList[0].length;\n  const bufferSampleRate = bufferList[0].sampleRate;\n  let bufferNumberOfChannel = 0;\n\n  for (let i = 0; i < bufferList.length; ++i) {\n    if (bufferNumberOfChannel > 32) {\n      exports.throw('Utils.mergeBuffer: Number of channels cannot exceed 32.' +\n          '(got ' + bufferNumberOfChannel + ')');\n    }\n    if (bufferLength !== bufferList[i].length) {\n      exports.throw('Utils.mergeBuffer: AudioBuffer lengths are ' +\n          'inconsistent. (expected ' + bufferLength + ' but got ' +\n          bufferList[i].length + ')');\n    }\n    if (bufferSampleRate !== bufferList[i].sampleRate) {\n      exports.throw('Utils.mergeBuffer: AudioBuffer sample rates are ' +\n          'inconsistent. (expected ' + bufferSampleRate + ' but got ' +\n          bufferList[i].sampleRate + ')');\n    }\n    bufferNumberOfChannel += bufferList[i].numberOfChannels;\n  }\n\n  const buffer = context.createBuffer(bufferNumberOfChannel,\n                                      bufferLength,\n                                      bufferSampleRate);\n  let destinationChannelIndex = 0;\n  for (let i = 0; i < bufferList.length; ++i) {\n    for (let j = 0; j < bufferList[i].numberOfChannels; ++j) {\n      buffer.getChannelData(destinationChannelIndex++).set(\n          bufferList[i].getChannelData(j));\n    }\n  }\n\n  return buffer;\n};\n\n\n/**\n * Perform channel-wise split by the given channel count. For example,\n * 1 x AudioBuffer(8) -> splitBuffer(context, buffer, 2) -> 4 x AudioBuffer(2).\n * @param {BaseAudioContext} context - Associated BaseAudioContext.\n * @param {AudioBuffer} audioBuffer - An AudioBuffer to be splitted.\n * @param {Number} splitBy - Number of channels to be splitted.\n * @return {AudioBuffer[]} - An array of splitted AudioBuffers.\n */\nexports.splitBufferbyChannel = function(context, audioBuffer, splitBy) {\n  if (audioBuffer.numberOfChannels <= splitBy) {\n    exports.throw('Utils.splitBuffer: Insufficient number of channels. (' +\n        audioBuffer.numberOfChannels + ' splitted by ' + splitBy + ')');\n  }\n\n  let bufflerList = [];\n  let sourceChannelIndex = 0;\n  const numberOfSplittedBuffer =\n      Math.ceil(audioBuffer.numberOfChannels / splitBy);\n  for (let i = 0; i < numberOfSplittedBuffer; ++i) {\n    let buffer = context.createBuffer(splitBy,\n                                      audioBuffer.length,\n                                      audioBuffer.sampleRate);\n    for (let j = 0; j < splitBy; ++j) {\n      if (sourceChannelIndex < audioBuffer.numberOfChannels) {\n        buffer.getChannelData(j).set(\n          audioBuffer.getChannelData(sourceChannelIndex++));\n      }\n    }\n    bufflerList.push(buffer);\n  }\n\n  return bufferList;\n};\n\n\n/**\n * Converts Base64-encoded string to ArrayBuffer.\n * @param {string} base64String - Base64-encdoed string.\n * @return {ArrayByuffer} Converted ArrayBuffer object.\n */\nexports.getArrayBufferFromBase64String = function(base64String) {\n  let binaryString = window.atob(base64String);\n  let byteArray = new Uint8Array(binaryString.length);\n  byteArray.forEach(\n    (value, index) => byteArray[index] = binaryString.charCodeAt(index));\n  return byteArray.buffer;\n};\n\n\n//# sourceURL=webpack:///./src/utils.js?")},"./src/version.js":function(module,exports,__webpack_require__){"use strict";eval('/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Omnitone version.\n */\n\n\n\n\n/**\n * Omnitone library version\n * @type {String}\n */\nmodule.exports = \'1.2.4\';\n\n\n//# sourceURL=webpack:///./src/version.js?')}})},module.exports=A()},function(n,e,t){"use strict";n.exports="1.0.0"}])});